{
  "{\"filename\":\"/Users/dtr/gooee/REACTOR/tests/propagation.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/dtr/gooee/REACTOR/tests\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false}:6.14.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/dtr/gooee/REACTOR/tests/propagation.test.js",
      "filenameRelative": "/Users/dtr/gooee/REACTOR/tests/propagation.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "propagation.test.js",
      "sourceFileName": "propagation.test.js",
      "sourceRoot": "/Users/dtr/gooee/REACTOR/tests",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/dtr/gooee/REACTOR/tests",
      "moduleIds": false,
      "passPerPreset": false,
      "basename": "propagation.test"
    },
    "ignored": false,
    "code": "'use strict';\n\nlet createProject = (() => {\n    var _ref = _asyncToGenerator(function* () {\n        let project = yield operator.project().create({\n            'name': `${ PREFIX } Project`\n        });\n\n        log('Project', 'created', project);\n        return operator.project(project.id);\n    });\n\n    return function createProject() {\n        return _ref.apply(this, arguments);\n    };\n})();\n\nlet createApp = (() => {\n    var _ref2 = _asyncToGenerator(function* (project) {\n        let app = yield project.application().create({\n            'name': `${ PREFIX } Application`,\n            'socialNetworks': {}\n        });\n\n        log('Application', 'created', app);\n        return new EVT.App(app.appApiKey);\n    });\n\n    return function createApp(_x) {\n        return _ref2.apply(this, arguments);\n    };\n})();\n\nlet fetchProject = (() => {\n    var _ref3 = _asyncToGenerator(function* (settings) {\n        let project = yield operator.project(settings.projectId).read();\n\n        log('Project', 'fetched', project);\n        return operator.project(settings.projectId);\n    });\n\n    return function fetchProject(_x2) {\n        return _ref3.apply(this, arguments);\n    };\n})();\n\nlet fetchApp = (() => {\n    var _ref4 = _asyncToGenerator(function* (settings) {\n        let app = yield operator.project(settings.projectId).application(settings.applicationId).read();\n\n        log('Application', 'fetched', app);\n        return new EVT.App(app.appApiKey);\n    });\n\n    return function fetchApp(_x3) {\n        return _ref4.apply(this, arguments);\n    };\n})();\n\nlet createUser = (() => {\n    var _ref5 = _asyncToGenerator(function* (app) {\n        let user = yield app.appUser().create({ anonymous: true });\n        log('User', 'created', user);\n        return new EVT.User(user, app);\n    });\n\n    return function createUser(_x4) {\n        return _ref5.apply(this, arguments);\n    };\n})();\n\nlet createCollection = (() => {\n    var _ref6 = _asyncToGenerator(function* (user) {\n        let collection = yield user.collection().create({\n            'name': `${ PREFIX } Collection`\n        });\n\n        log('Collection', 'created', collection);\n        return collection;\n    });\n\n    return function createCollection(_x5) {\n        return _ref6.apply(this, arguments);\n    };\n})();\n\nlet createThng = (() => {\n    var _ref7 = _asyncToGenerator(function* (user, rules, properties) {\n        let thng = yield user.thng().create({\n            'name': `${ PREFIX } Thng`,\n            'properties': _.assign(properties, rules)\n        });\n\n        log('Thng', 'created', thng);\n        return user.thng(thng.id);\n    });\n\n    return function createThng(_x6, _x7, _x8) {\n        return _ref7.apply(this, arguments);\n    };\n})();\n\nlet createActionTypes = (() => {\n    var _ref8 = _asyncToGenerator(function* (names) {\n        let actionTypes = Promise.all(names.map((() => {\n            var _ref9 = _asyncToGenerator(function* (name) {\n                try {\n                    let actionType = yield operator.actionType().create({ name });\n\n                    log('ActionType', 'created', actionType);\n                } catch (error) {\n                    if (error.status !== 409) console.error(JSON.stringify(error));\n                }\n            });\n\n            return function (_x10) {\n                return _ref9.apply(this, arguments);\n            };\n        })()));\n    });\n\n    return function createActionTypes(_x9) {\n        return _ref8.apply(this, arguments);\n    };\n})();\n\nlet readReactorStatus = (() => {\n    var _ref10 = _asyncToGenerator(function* (appData) {\n        console.log(`Getting the REACTOR status for App '${ appData.name }' with ID '${ appData.id }'...`);\n\n        let status = yield request.get({\n            url: `https://api.evrythng.com/${ appData.resource.path }/reactorScript/status`,\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': settings.operatorKey\n            }\n        });\n\n        console.log(`REACTOR status: ${ status }`);\n        return status;\n    });\n\n    return function readReactorStatus(_x11) {\n        return _ref10.apply(this, arguments);\n    };\n})();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { return step(\"next\", value); }, function (err) { return step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nlet _ = require('lodash');\nlet EVT = require('evrythng-extended');\nlet fs = require('fs');\nlet request = require('request-promise');\nlet test = require('blue-tape');\n\nlet BASE_DIR = `${ __dirname }/..`;\nlet PREFIX = 'REACTOR';\n\nlet settings = require(`${ BASE_DIR }/uploadSettings.json`);\n\nlet operator = new EVT.Operator(settings.operatorKey);\n\nfunction getSampleRule() {\n    let rule = JSON.parse(fs.readFileSync(`${ BASE_DIR }/tests/shared/rules-sample-1.json`, 'utf8'));\n    rule.name = `${ PREFIX } Rule`;\n    return rule;\n}\n\nfunction log(objectType, verb, obj) {\n    console.log(`${ objectType } '${ obj.name }' ${ verb } with ID '${ obj.id }'`);\n}\n\ntest('REACTOR', (() => {\n    var _ref11 = _asyncToGenerator(function* (t) {\n        //let project = await createProject(operator)\n        //let app = await createApp(project)\n        let project = yield fetchProject(settings);\n        let app = yield fetchApp(settings);\n        let user = yield createUser(app);\n        let collection = yield createCollection(user);\n        yield createActionTypes(['_dim', '_on', '_off']);\n\n        let rule = getSampleRule();\n        rule.conditions = [{\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': true,\n            'logical_operator': 'and'\n        }, {\n            'variable': 'ambient_light',\n            'operator': '>',\n            'value': 10,\n            'logical_operator': null\n        }];\n        rule.operations = [{\n            'collections': [collection.id],\n            'actions': [{\n                'name': '_off'\n            }, {\n                'name': '_dim',\n                'parameters': {\n                    'value': 1\n                }\n            }]\n        }];\n\n        let rules = { '__rule__7828728700101': rule };\n\n        let properties = {\n            'occupancy_detected': false,\n            'ambient_light': 9\n        };\n\n        let thng = yield createThng(user, rules, properties);\n\n        let props = yield thng.property('ambient_light').update(11);\n        let ambient_light = props[0].value;\n        t.equal(ambient_light, 11);\n\n        props = yield thng.property('occupancy_detected').update(true);\n        let occupancy_detected = props[0].value;\n        t.equal(occupancy_detected, true);\n\n        let actions = yield operator.action('all').read();\n    });\n\n    return function (_x12) {\n        return _ref11.apply(this, arguments);\n    };\n})());\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "propagation.test.js"
      ],
      "names": [
        "project",
        "operator",
        "create",
        "PREFIX",
        "log",
        "id",
        "createProject",
        "app",
        "application",
        "EVT",
        "App",
        "appApiKey",
        "createApp",
        "settings",
        "projectId",
        "read",
        "fetchProject",
        "applicationId",
        "fetchApp",
        "user",
        "appUser",
        "anonymous",
        "User",
        "createUser",
        "collection",
        "createCollection",
        "rules",
        "properties",
        "thng",
        "_",
        "assign",
        "createThng",
        "names",
        "actionTypes",
        "Promise",
        "all",
        "map",
        "name",
        "actionType",
        "error",
        "status",
        "console",
        "JSON",
        "stringify",
        "createActionTypes",
        "appData",
        "request",
        "get",
        "url",
        "resource",
        "path",
        "headers",
        "operatorKey",
        "readReactorStatus",
        "require",
        "fs",
        "test",
        "BASE_DIR",
        "__dirname",
        "Operator",
        "getSampleRule",
        "rule",
        "parse",
        "readFileSync",
        "objectType",
        "verb",
        "obj",
        "t",
        "conditions",
        "operations",
        "props",
        "property",
        "update",
        "ambient_light",
        "value",
        "equal",
        "occupancy_detected",
        "actions",
        "action"
      ],
      "mappings": "AAAA;;;iCAwBA,aAAgC;AAC5B,YAAIA,UAAU,MAAMC,SAASD,OAAT,GAAmBE,MAAnB,CAA0B;AAC1C,oBAAS,IAAEC,MAAO;AADwB,SAA1B,CAApB;;AAIAC,YAAI,SAAJ,EAAe,SAAf,EAA0BJ,OAA1B;AACA,eAAOC,SAASD,OAAT,CAAiBA,QAAQK,EAAzB,CAAP;AACH,K;;oBAPcC,a;;;;;;kCASf,WAA0BN,OAA1B,EAAmC;AAC/B,YAAIO,MAAM,MAAMP,QAAQQ,WAAR,GAAsBN,MAAtB,CAA6B;AACzC,oBAAS,IAAEC,MAAO,eADuB;AAEzC,8BAAkB;AAFuB,SAA7B,CAAhB;;AAKAC,YAAI,aAAJ,EAAmB,SAAnB,EAA8BG,GAA9B;AACA,eAAO,IAAIE,IAAIC,GAAR,CAAYH,IAAII,SAAhB,CAAP;AACH,K;;oBARcC,S;;;;;;kCAUf,WAA6BC,QAA7B,EAAuC;AACnC,YAAIb,UAAU,MAAMC,SACfD,OADe,CACPa,SAASC,SADF,EAEfC,IAFe,EAApB;;AAIAX,YAAI,SAAJ,EAAe,SAAf,EAA0BJ,OAA1B;AACA,eAAOC,SAASD,OAAT,CAAiBa,SAASC,SAA1B,CAAP;AACH,K;;oBAPcE,Y;;;;;;kCASf,WAAyBH,QAAzB,EAAmC;AAC/B,YAAIN,MAAM,MAAMN,SACXD,OADW,CACHa,SAASC,SADN,EAEXN,WAFW,CAECK,SAASI,aAFV,EAGXF,IAHW,EAAhB;;AAKAX,YAAI,aAAJ,EAAmB,SAAnB,EAA8BG,GAA9B;AACA,eAAO,IAAIE,IAAIC,GAAR,CAAYH,IAAII,SAAhB,CAAP;AACH,K;;oBARcO,Q;;;;;;kCAUf,WAA2BX,GAA3B,EAAgC;AAC5B,YAAIY,OAAO,MAAMZ,IAAIa,OAAJ,GAAclB,MAAd,CAAqB,EAAEmB,WAAW,IAAb,EAArB,CAAjB;AACAjB,YAAI,MAAJ,EAAY,SAAZ,EAAuBe,IAAvB;AACA,eAAO,IAAIV,IAAIa,IAAR,CAAaH,IAAb,EAAmBZ,GAAnB,CAAP;AACH,K;;oBAJcgB,U;;;;;;kCAMf,WAAiCJ,IAAjC,EAAuC;AACnC,YAAIK,aAAa,MAAML,KAAKK,UAAL,GAAkBtB,MAAlB,CAAyB;AAC5C,oBAAS,IAAEC,MAAO;AAD0B,SAAzB,CAAvB;;AAIAC,YAAI,YAAJ,EAAkB,SAAlB,EAA6BoB,UAA7B;AACA,eAAOA,UAAP;AACH,K;;oBAPcC,gB;;;;;;kCASf,WAA2BN,IAA3B,EAAiCO,KAAjC,EAAwCC,UAAxC,EAAoD;AAChD,YAAIC,OAAO,MAAMT,KAAKS,IAAL,GAAY1B,MAAZ,CAAmB;AAChC,oBAAS,IAAEC,MAAO,QADc;AAEhC,0BAAc0B,EAAEC,MAAF,CAASH,UAAT,EAAqBD,KAArB;AAFkB,SAAnB,CAAjB;;AAKAtB,YAAI,MAAJ,EAAY,SAAZ,EAAuBwB,IAAvB;AACA,eAAOT,KAAKS,IAAL,CAAUA,KAAKvB,EAAf,CAAP;AACH,K;;oBARc0B,U;;;;;;kCAUf,WAAkCC,KAAlC,EAAyC;AACrC,YAAIC,cAAcC,QAAQC,GAAR,CAAYH,MAAMI,GAAN;AAAA,0CAAU,WAAOC,IAAP,EAAgB;AACpD,oBAAI;AACA,wBAAIC,aAAa,MAAMrC,SAASqC,UAAT,GAAsBpC,MAAtB,CAA6B,EAAEmC,IAAF,EAA7B,CAAvB;;AAEAjC,wBAAI,YAAJ,EAAkB,SAAlB,EAA6BkC,UAA7B;AAEH,iBALD,CAKE,OAAOC,KAAP,EAAc;AACZ,wBAAIA,MAAMC,MAAN,KAAiB,GAArB,EACIC,QAAQF,KAAR,CAAcG,KAAKC,SAAL,CAAeJ,KAAf,CAAd;AACP;AACJ,aAV6B;;AAAA;AAAA;AAAA;AAAA,aAAZ,CAAlB;AAWH,K;;oBAZcK,iB;;;;;;mCAcf,WAAkCC,OAAlC,EAA2C;AACvCJ,gBAAQrC,GAAR,CACK,wCAAsCyC,QAAQR,IAAK,gBAAaQ,QAAQxC,EAAG,OADhF;;AAGA,YAAImC,SAAS,MAAMM,QAAQC,GAAR,CAAY;AAC3BC,iBAAM,6BAA2BH,QAAQI,QAAR,CAAiBC,IAAK,wBAD5B;AAE3BC,qBAAS;AACL,0BAAU,kBADL;AAEL,iCAAiBtC,SAASuC;AAFrB;AAFkB,SAAZ,CAAnB;;AAQAX,gBAAQrC,GAAR,CAAa,oBAAkBoC,MAAO,GAAtC;AACA,eAAOA,MAAP;AACH,K;;oBAdca,iB;;;;;;;AApGf,IAAIxB,IAAIyB,QAAQ,QAAR,CAAR;AACA,IAAI7C,MAAM6C,QAAQ,mBAAR,CAAV;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIR,UAAUQ,QAAQ,iBAAR,CAAd;AACA,IAAIE,OAAOF,QAAQ,WAAR,CAAX;;AAEA,IAAIG,WAAY,IAAEC,SAAU,MAA5B;AACA,IAAIvD,SAAS,SAAb;;AAEA,IAAIU,WAAWyC,QAAS,IAAEG,QAAS,uBAApB,CAAf;;AAEA,IAAIxD,WAAW,IAAIQ,IAAIkD,QAAR,CAAiB9C,SAASuC,WAA1B,CAAf;;AAEA,SAASQ,aAAT,GAA0B;AACtB,QAAIC,OAAOnB,KAAKoB,KAAL,CAAWP,GAAGQ,YAAH,CAAiB,IAAEN,QAAS,oCAA5B,EAAgE,MAAhE,CAAX,CAAX;AACAI,SAAKxB,IAAL,GAAa,IAAElC,MAAO,QAAtB;AACA,WAAO0D,IAAP;AACH;;AAED,SAASzD,GAAT,CAAc4D,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqC;AACjCzB,YAAQrC,GAAR,CAAa,IAAE4D,UAAW,OAAIE,IAAI7B,IAAK,OAAI4B,IAAK,eAAYC,IAAI7D,EAAG,IAAnE;AACH;;AA+FDmD,KAAK,SAAL;AAAA,mCAAgB,WAAOW,CAAP,EAAa;AACzB;AACA;AACA,YAAInE,UAAU,MAAMgB,aAAaH,QAAb,CAApB;AACA,YAAIN,MAAM,MAAMW,SAASL,QAAT,CAAhB;AACA,YAAIM,OAAO,MAAMI,WAAWhB,GAAX,CAAjB;AACA,YAAIiB,aAAa,MAAMC,iBAAiBN,IAAjB,CAAvB;AACA,cAAMyB,kBAAkB,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,CAAlB,CAAN;;AAEA,YAAIiB,OAAOD,eAAX;AACAC,aAAKO,UAAL,GAAkB,CACd;AACI,wBAAY,oBADhB;AAEI,wBAAY,GAFhB;AAGI,qBAAS,IAHb;AAII,gCAAoB;AAJxB,SADc,EAOd;AACI,wBAAY,eADhB;AAEI,wBAAY,GAFhB;AAGI,qBAAS,EAHb;AAII,gCAAoB;AAJxB,SAPc,CAAlB;AAcAP,aAAKQ,UAAL,GAAkB,CACd;AACI,2BAAe,CACX7C,WAAWnB,EADA,CADnB;AAII,uBAAW,CACP;AACI,wBAAQ;AADZ,aADO,EAIP;AACI,wBAAQ,MADZ;AAEI,8BAAc;AACV,6BAAS;AADC;AAFlB,aAJO;AAJf,SADc,CAAlB;;AAmBA,YAAIqB,QAAQ,EAAE,yBAAyBmC,IAA3B,EAAZ;;AAEA,YAAIlC,aAAa;AACb,kCAAsB,KADT;AAEb,6BAAiB;AAFJ,SAAjB;;AAKA,YAAIC,OAAO,MAAMG,WAAWZ,IAAX,EAAiBO,KAAjB,EAAwBC,UAAxB,CAAjB;;AAEA,YAAI2C,QAAQ,MAAM1C,KAAK2C,QAAL,CAAc,eAAd,EAA+BC,MAA/B,CAAsC,EAAtC,CAAlB;AACA,YAAIC,gBAAgBH,MAAM,CAAN,EAASI,KAA7B;AACAP,UAAEQ,KAAF,CAAQF,aAAR,EAAuB,EAAvB;;AAEAH,gBAAQ,MAAM1C,KAAK2C,QAAL,CAAc,oBAAd,EAAoCC,MAApC,CAA2C,IAA3C,CAAd;AACA,YAAII,qBAAqBN,MAAM,CAAN,EAASI,KAAlC;AACAP,UAAEQ,KAAF,CAAQC,kBAAR,EAA4B,IAA5B;;AAEA,YAAIC,UAAU,MAAM5E,SAAS6E,MAAT,CAAgB,KAAhB,EAAuB/D,IAAvB,EAApB;AACH,KA7DD;;AAAA;AAAA;AAAA;AAAA",
      "file": "propagation.test.js",
      "sourceRoot": "/Users/dtr/gooee/REACTOR/tests",
      "sourcesContent": [
        "'use strict'\nlet _ = require('lodash')\nlet EVT = require('evrythng-extended')\nlet fs = require('fs')\nlet request = require('request-promise')\nlet test = require('blue-tape')\n\nlet BASE_DIR = `${__dirname}/..`\nlet PREFIX = 'REACTOR'\n\nlet settings = require(`${BASE_DIR}/uploadSettings.json`)\n\nlet operator = new EVT.Operator(settings.operatorKey)\n\nfunction getSampleRule () {\n    let rule = JSON.parse(fs.readFileSync(`${BASE_DIR}/tests/shared/rules-sample-1.json`, 'utf8'))\n    rule.name = `${PREFIX} Rule`\n    return rule\n}\n\nfunction log (objectType, verb, obj) {\n    console.log(`${objectType} '${obj.name}' ${verb} with ID '${obj.id}'`)\n}\n\nasync function createProject () {\n    let project = await operator.project().create({\n        'name': `${PREFIX} Project`\n    })\n\n    log('Project', 'created', project)\n    return operator.project(project.id)\n}\n\nasync function createApp (project) {\n    let app = await project.application().create({\n        'name': `${PREFIX} Application`,\n        'socialNetworks': {},\n    })\n\n    log('Application', 'created', app)\n    return new EVT.App(app.appApiKey)\n}\n\nasync function fetchProject (settings) {\n    let project = await operator\n        .project(settings.projectId)\n        .read()\n\n    log('Project', 'fetched', project)\n    return operator.project(settings.projectId)\n}\n\nasync function fetchApp (settings) {\n    let app = await operator\n        .project(settings.projectId)\n        .application(settings.applicationId)\n        .read()\n\n    log('Application', 'fetched', app)\n    return new EVT.App(app.appApiKey)\n}\n\nasync function createUser (app) {\n    let user = await app.appUser().create({ anonymous: true })\n    log('User', 'created', user)\n    return new EVT.User(user, app)\n}\n\nasync function createCollection (user) {\n    let collection = await user.collection().create({\n        'name': `${PREFIX} Collection`,\n    })\n\n    log('Collection', 'created', collection)\n    return collection\n}\n\nasync function createThng (user, rules, properties) {\n    let thng = await user.thng().create({\n        'name': `${PREFIX} Thng`,\n        'properties': _.assign(properties, rules),\n    })\n\n    log('Thng', 'created', thng)\n    return user.thng(thng.id)\n}\n\nasync function createActionTypes (names) {\n    let actionTypes = Promise.all(names.map(async (name) => {\n        try {\n            let actionType = await operator.actionType().create({ name })\n\n            log('ActionType', 'created', actionType)\n\n        } catch (error) {\n            if (error.status !== 409)\n                console.error(JSON.stringify(error))\n        }\n    }))\n}\n\nasync function readReactorStatus (appData) {\n    console.log(\n        `Getting the REACTOR status for App '${appData.name}' with ID '${appData.id}'...`)\n\n    let status = await request.get({\n        url: `https://api.evrythng.com/${appData.resource.path}/reactorScript/status`,\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': settings.operatorKey,\n        }\n    })\n\n    console.log(`REACTOR status: ${status}`)\n    return status\n}\n\ntest('REACTOR', async (t) => {\n    //let project = await createProject(operator)\n    //let app = await createApp(project)\n    let project = await fetchProject(settings)\n    let app = await fetchApp(settings)\n    let user = await createUser(app)\n    let collection = await createCollection(user)\n    await createActionTypes(['_dim', '_on', '_off'])\n\n    let rule = getSampleRule()\n    rule.conditions = [\n        {\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': true,\n            'logical_operator': 'and',\n        },\n        {\n            'variable': 'ambient_light',\n            'operator': '>',\n            'value': 10,\n            'logical_operator': null,\n        },\n    ]\n    rule.operations = [\n        {\n            'collections': [\n                collection.id\n            ],\n            'actions': [\n                {\n                    'name': '_off'\n                },\n                {\n                    'name': '_dim',\n                    'parameters': {\n                        'value': 1\n                    }\n                }\n            ]\n        }\n    ]\n\n    let rules = { '__rule__7828728700101': rule }\n\n    let properties = {\n        'occupancy_detected': false,\n        'ambient_light': 9,\n    }\n\n    let thng = await createThng(user, rules, properties)\n\n    let props = await thng.property('ambient_light').update(11)\n    let ambient_light = props[0].value\n    t.equal(ambient_light, 11)\n\n    props = await thng.property('occupancy_detected').update(true)\n    let occupancy_detected = props[0].value\n    t.equal(occupancy_detected, true)\n\n    let actions = await operator.action('all').read()\n})\n"
      ]
    },
    "mtime": 1472579343000
  },
  "{\"filename\":\"/Users/dtr/gooee/REACTOR/tests/integration.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/dtr/gooee/REACTOR/tests\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false}:6.14.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/dtr/gooee/REACTOR/tests/integration.test.js",
      "filenameRelative": "/Users/dtr/gooee/REACTOR/tests/integration.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "integration.test.js",
      "sourceFileName": "integration.test.js",
      "sourceRoot": "/Users/dtr/gooee/REACTOR/tests",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/dtr/gooee/REACTOR/tests",
      "moduleIds": false,
      "passPerPreset": false,
      "basename": "integration.test"
    },
    "ignored": false,
    "code": "'use strict';\n\nlet createProject = (() => {\n    var _ref = _asyncToGenerator(function* () {\n        let project = yield operator.project().create({\n            'name': `${ PREFIX } Project`\n        });\n\n        log('Project', 'created', project);\n        return operator.project(project.id);\n    });\n\n    return function createProject() {\n        return _ref.apply(this, arguments);\n    };\n})();\n\nlet createApp = (() => {\n    var _ref2 = _asyncToGenerator(function* (project) {\n        let app = yield project.application().create({\n            'name': `${ PREFIX } Application`,\n            'socialNetworks': {}\n        });\n\n        log('Application', 'created', app);\n        return new EVT.App(app.appApiKey);\n    });\n\n    return function createApp(_x) {\n        return _ref2.apply(this, arguments);\n    };\n})();\n\nlet fetchProject = (() => {\n    var _ref3 = _asyncToGenerator(function* (settings) {\n        let project = yield operator.project(settings.projectId).read();\n\n        log('Project', 'fetched', project);\n        return operator.project(settings.projectId);\n    });\n\n    return function fetchProject(_x2) {\n        return _ref3.apply(this, arguments);\n    };\n})();\n\nlet fetchApp = (() => {\n    var _ref4 = _asyncToGenerator(function* (settings) {\n        let app = yield operator.project(settings.projectId).application(settings.applicationId).read();\n\n        log('Application', 'fetched', app);\n        return new EVT.App(app.appApiKey);\n    });\n\n    return function fetchApp(_x3) {\n        return _ref4.apply(this, arguments);\n    };\n})();\n\nlet createUser = (() => {\n    var _ref5 = _asyncToGenerator(function* (app) {\n        let user = yield app.appUser().create({ anonymous: true });\n        log('User', 'created', user);\n        return new EVT.User(user, app);\n    });\n\n    return function createUser(_x4) {\n        return _ref5.apply(this, arguments);\n    };\n})();\n\nlet createCollection = (() => {\n    var _ref6 = _asyncToGenerator(function* (user) {\n        let collection = yield user.collection().create({\n            'name': `${ PREFIX } Collection`\n        });\n\n        log('Collection', 'created', collection);\n        return collection;\n    });\n\n    return function createCollection(_x5) {\n        return _ref6.apply(this, arguments);\n    };\n})();\n\nlet createThng = (() => {\n    var _ref7 = _asyncToGenerator(function* (user, rules, properties) {\n        let thng = yield user.thng().create({\n            'name': `${ PREFIX } Thng`,\n            'properties': _.assign(properties, rules)\n        });\n\n        log('Thng', 'created', thng);\n        return user.thng(thng.id);\n    });\n\n    return function createThng(_x6, _x7, _x8) {\n        return _ref7.apply(this, arguments);\n    };\n})();\n\nlet createActionTypes = (() => {\n    var _ref8 = _asyncToGenerator(function* (names) {\n        let actionTypes = Promise.all(names.map((() => {\n            var _ref9 = _asyncToGenerator(function* (name) {\n                try {\n                    let actionType = yield operator.actionType().create({ name });\n\n                    log('ActionType', 'created', actionType);\n                } catch (error) {\n                    if (error.status !== 409) console.error(JSON.stringify(error));\n                }\n            });\n\n            return function (_x10) {\n                return _ref9.apply(this, arguments);\n            };\n        })()));\n    });\n\n    return function createActionTypes(_x9) {\n        return _ref8.apply(this, arguments);\n    };\n})();\n\nlet readReactorStatus = (() => {\n    var _ref10 = _asyncToGenerator(function* (appData) {\n        console.log(`Getting the REACTOR status for App '${ appData.name }' with ID '${ appData.id }'...`);\n\n        let status = yield request.get({\n            url: `https://api.evrythng.com/${ appData.resource.path }/reactorScript/status`,\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': settings.operatorKey\n            }\n        });\n\n        console.log(`REACTOR status: ${ status }`);\n        return status;\n    });\n\n    return function readReactorStatus(_x11) {\n        return _ref10.apply(this, arguments);\n    };\n})();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { return step(\"next\", value); }, function (err) { return step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nlet _ = require('lodash');\nlet EVT = require('evrythng-extended');\nlet fs = require('fs');\nlet request = require('request-promise');\nlet test = require('blue-tape');\n\nlet BASE_DIR = `${ __dirname }/..`;\nlet PREFIX = 'REACTOR';\n\nlet settings = require(`${ BASE_DIR }/uploadSettings.json`);\n\nlet operator = new EVT.Operator(settings.operatorKey);\n\nfunction getSampleRule() {\n    let rule = JSON.parse(fs.readFileSync(`${ BASE_DIR }/tests/shared/rules-sample-1.json`, 'utf8'));\n    rule.name = `${ PREFIX } Rule`;\n    return rule;\n}\n\nfunction log(objectType, verb, obj) {\n    console.log(`${ objectType } '${ obj.name }' ${ verb } with ID '${ obj.id }'`);\n}\n\ntest('REACTOR', (() => {\n    var _ref11 = _asyncToGenerator(function* (t) {\n        //let project = await createProject(operator)\n        //let app = await createApp(project)\n        let project = yield fetchProject(settings);\n        let app = yield fetchApp(settings);\n        let user = yield createUser(app);\n        let collection = yield createCollection(user);\n        yield createActionTypes(['_dim', '_on', '_off']);\n\n        let rule = getSampleRule();\n        rule.conditions = [{\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': true,\n            'logical_operator': 'and'\n        }, {\n            'variable': 'ambient_light',\n            'operator': '>',\n            'value': 10,\n            'logical_operator': null\n        }];\n        rule.operations = [{\n            'collections': [collection.id],\n            'actions': [{\n                'name': '_off'\n            }, {\n                'name': '_dim',\n                'parameters': {\n                    'value': 1\n                }\n            }]\n        }];\n\n        let rules = { '__rule__7828728700101': rule };\n\n        let properties = {\n            'occupancy_detected': false,\n            'ambient_light': 9\n        };\n\n        let thng = yield createThng(user, rules, properties);\n\n        let props = yield thng.property('ambient_light').update(11);\n        let ambient_light = props[0].value;\n        t.equal(ambient_light, 11);\n\n        props = yield thng.property('occupancy_detected').update(true);\n        let occupancy_detected = props[0].value;\n        t.equal(occupancy_detected, true);\n\n        let actions = yield operator.action('all').read();\n    });\n\n    return function (_x12) {\n        return _ref11.apply(this, arguments);\n    };\n})());\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVncmF0aW9uLnRlc3QuanMiXSwibmFtZXMiOlsicHJvamVjdCIsIm9wZXJhdG9yIiwiY3JlYXRlIiwiUFJFRklYIiwibG9nIiwiaWQiLCJjcmVhdGVQcm9qZWN0IiwiYXBwIiwiYXBwbGljYXRpb24iLCJFVlQiLCJBcHAiLCJhcHBBcGlLZXkiLCJjcmVhdGVBcHAiLCJzZXR0aW5ncyIsInByb2plY3RJZCIsInJlYWQiLCJmZXRjaFByb2plY3QiLCJhcHBsaWNhdGlvbklkIiwiZmV0Y2hBcHAiLCJ1c2VyIiwiYXBwVXNlciIsImFub255bW91cyIsIlVzZXIiLCJjcmVhdGVVc2VyIiwiY29sbGVjdGlvbiIsImNyZWF0ZUNvbGxlY3Rpb24iLCJydWxlcyIsInByb3BlcnRpZXMiLCJ0aG5nIiwiXyIsImFzc2lnbiIsImNyZWF0ZVRobmciLCJuYW1lcyIsImFjdGlvblR5cGVzIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsIm5hbWUiLCJhY3Rpb25UeXBlIiwiZXJyb3IiLCJzdGF0dXMiLCJjb25zb2xlIiwiSlNPTiIsInN0cmluZ2lmeSIsImNyZWF0ZUFjdGlvblR5cGVzIiwiYXBwRGF0YSIsInJlcXVlc3QiLCJnZXQiLCJ1cmwiLCJyZXNvdXJjZSIsInBhdGgiLCJoZWFkZXJzIiwib3BlcmF0b3JLZXkiLCJyZWFkUmVhY3RvclN0YXR1cyIsInJlcXVpcmUiLCJmcyIsInRlc3QiLCJCQVNFX0RJUiIsIl9fZGlybmFtZSIsIk9wZXJhdG9yIiwiZ2V0U2FtcGxlUnVsZSIsInJ1bGUiLCJwYXJzZSIsInJlYWRGaWxlU3luYyIsIm9iamVjdFR5cGUiLCJ2ZXJiIiwib2JqIiwidCIsImNvbmRpdGlvbnMiLCJvcGVyYXRpb25zIiwicHJvcHMiLCJwcm9wZXJ0eSIsInVwZGF0ZSIsImFtYmllbnRfbGlnaHQiLCJ2YWx1ZSIsImVxdWFsIiwib2NjdXBhbmN5X2RldGVjdGVkIiwiYWN0aW9ucyIsImFjdGlvbiJdLCJtYXBwaW5ncyI6IkFBQUE7OztpQ0F3QkEsYUFBZ0M7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N0MsV0FBV25CLEVBREEsQ0FEbkI7QUFJSSx1QkFBVyxDQUNQO0FBQ0ksd0JBQVE7QUFEWixhQURPLEVBSVA7QUFDSSx3QkFBUSxNQURaO0FBRUksOEJBQWM7QUFDViw2QkFBUztBQURDO0FBRmxCLGFBSk87QUFKZixTQURjLENBQWxCOztBQW1CQSxZQUFJcUIsUUFBUSxFQUFFLHlCQUF5Qm1DLElBQTNCLEVBQVo7O0FBRUEsWUFBSWxDLGFBQWE7QUFDYixrQ0FBc0IsS0FEVDtBQUViLDZCQUFpQjtBQUZKLFNBQWpCOztBQUtBLFlBQUlDLE9BQU8sTUFBTUcsV0FBV1osSUFBWCxFQUFpQk8sS0FBakIsRUFBd0JDLFVBQXhCLENBQWpCOztBQUVBLFlBQUkyQyxRQUFRLE1BQU0xQyxLQUFLMkMsUUFBTCxDQUFjLGVBQWQsRUFBK0JDLE1BQS9CLENBQXNDLEVBQXRDLENBQWxCO0FBQ0EsWUFBSUMsZ0JBQWdCSCxNQUFNLENBQU4sRUFBU0ksS0FBN0I7QUFDQVAsVUFBRVEsS0FBRixDQUFRRixhQUFSLEVBQXVCLEVBQXZCOztBQUVBSCxnQkFBUSxNQUFNMUMsS0FBSzJDLFFBQUwsQ0FBYyxvQkFBZCxFQUFvQ0MsTUFBcEMsQ0FBMkMsSUFBM0MsQ0FBZDtBQUNBLFlBQUlJLHFCQUFxQk4sTUFBTSxDQUFOLEVBQVNJLEtBQWxDO0FBQ0FQLFVBQUVRLEtBQUYsQ0FBUUMsa0JBQVIsRUFBNEIsSUFBNUI7O0FBRUEsWUFBSUMsVUFBVSxNQUFNNUUsU0FBUzZFLE1BQVQsQ0FBZ0IsS0FBaEIsRUFBdUIvRCxJQUF2QixFQUFwQjtBQUNILEtBN0REOztBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6ImludGVncmF0aW9uLnRlc3QuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2R0ci9nb29lZS9SRUFDVE9SL3Rlc3RzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5sZXQgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpXG5sZXQgRVZUID0gcmVxdWlyZSgnZXZyeXRobmctZXh0ZW5kZWQnKVxubGV0IGZzID0gcmVxdWlyZSgnZnMnKVxubGV0IHJlcXVlc3QgPSByZXF1aXJlKCdyZXF1ZXN0LXByb21pc2UnKVxubGV0IHRlc3QgPSByZXF1aXJlKCdibHVlLXRhcGUnKVxuXG5sZXQgQkFTRV9ESVIgPSBgJHtfX2Rpcm5hbWV9Ly4uYFxubGV0IFBSRUZJWCA9ICdSRUFDVE9SJ1xuXG5sZXQgc2V0dGluZ3MgPSByZXF1aXJlKGAke0JBU0VfRElSfS91cGxvYWRTZXR0aW5ncy5qc29uYClcblxubGV0IG9wZXJhdG9yID0gbmV3IEVWVC5PcGVyYXRvcihzZXR0aW5ncy5vcGVyYXRvcktleSlcblxuZnVuY3Rpb24gZ2V0U2FtcGxlUnVsZSAoKSB7XG4gICAgbGV0IHJ1bGUgPSBKU09OLnBhcnNlKGZzLnJlYWRGaWxlU3luYyhgJHtCQVNFX0RJUn0vdGVzdHMvc2hhcmVkL3J1bGVzLXNhbXBsZS0xLmpzb25gLCAndXRmOCcpKVxuICAgIHJ1bGUubmFtZSA9IGAke1BSRUZJWH0gUnVsZWBcbiAgICByZXR1cm4gcnVsZVxufVxuXG5mdW5jdGlvbiBsb2cgKG9iamVjdFR5cGUsIHZlcmIsIG9iaikge1xuICAgIGNvbnNvbGUubG9nKGAke29iamVjdFR5cGV9ICcke29iai5uYW1lfScgJHt2ZXJifSB3aXRoIElEICcke29iai5pZH0nYClcbn1cblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlUHJvamVjdCAoKSB7XG4gICAgbGV0IHByb2plY3QgPSBhd2FpdCBvcGVyYXRvci5wcm9qZWN0KCkuY3JlYXRlKHtcbiAgICAgICAgJ25hbWUnOiBgJHtQUkVGSVh9IFByb2plY3RgXG4gICAgfSlcblxuICAgIGxvZygnUHJvamVjdCcsICdjcmVhdGVkJywgcHJvamVjdClcbiAgICByZXR1cm4gb3BlcmF0b3IucHJvamVjdChwcm9qZWN0LmlkKVxufVxuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVBcHAgKHByb2plY3QpIHtcbiAgICBsZXQgYXBwID0gYXdhaXQgcHJvamVjdC5hcHBsaWNhdGlvbigpLmNyZWF0ZSh7XG4gICAgICAgICduYW1lJzogYCR7UFJFRklYfSBBcHBsaWNhdGlvbmAsXG4gICAgICAgICdzb2NpYWxOZXR3b3Jrcyc6IHt9LFxuICAgIH0pXG5cbiAgICBsb2coJ0FwcGxpY2F0aW9uJywgJ2NyZWF0ZWQnLCBhcHApXG4gICAgcmV0dXJuIG5ldyBFVlQuQXBwKGFwcC5hcHBBcGlLZXkpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGZldGNoUHJvamVjdCAoc2V0dGluZ3MpIHtcbiAgICBsZXQgcHJvamVjdCA9IGF3YWl0IG9wZXJhdG9yXG4gICAgICAgIC5wcm9qZWN0KHNldHRpbmdzLnByb2plY3RJZClcbiAgICAgICAgLnJlYWQoKVxuXG4gICAgbG9nKCdQcm9qZWN0JywgJ2ZldGNoZWQnLCBwcm9qZWN0KVxuICAgIHJldHVybiBvcGVyYXRvci5wcm9qZWN0KHNldHRpbmdzLnByb2plY3RJZClcbn1cblxuYXN5bmMgZnVuY3Rpb24gZmV0Y2hBcHAgKHNldHRpbmdzKSB7XG4gICAgbGV0IGFwcCA9IGF3YWl0IG9wZXJhdG9yXG4gICAgICAgIC5wcm9qZWN0KHNldHRpbmdzLnByb2plY3RJZClcbiAgICAgICAgLmFwcGxpY2F0aW9uKHNldHRpbmdzLmFwcGxpY2F0aW9uSWQpXG4gICAgICAgIC5yZWFkKClcblxuICAgIGxvZygnQXBwbGljYXRpb24nLCAnZmV0Y2hlZCcsIGFwcClcbiAgICByZXR1cm4gbmV3IEVWVC5BcHAoYXBwLmFwcEFwaUtleSlcbn1cblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlVXNlciAoYXBwKSB7XG4gICAgbGV0IHVzZXIgPSBhd2FpdCBhcHAuYXBwVXNlcigpLmNyZWF0ZSh7IGFub255bW91czogdHJ1ZSB9KVxuICAgIGxvZygnVXNlcicsICdjcmVhdGVkJywgdXNlcilcbiAgICByZXR1cm4gbmV3IEVWVC5Vc2VyKHVzZXIsIGFwcClcbn1cblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ29sbGVjdGlvbiAodXNlcikge1xuICAgIGxldCBjb2xsZWN0aW9uID0gYXdhaXQgdXNlci5jb2xsZWN0aW9uKCkuY3JlYXRlKHtcbiAgICAgICAgJ25hbWUnOiBgJHtQUkVGSVh9IENvbGxlY3Rpb25gLFxuICAgIH0pXG5cbiAgICBsb2coJ0NvbGxlY3Rpb24nLCAnY3JlYXRlZCcsIGNvbGxlY3Rpb24pXG4gICAgcmV0dXJuIGNvbGxlY3Rpb25cbn1cblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlVGhuZyAodXNlciwgcnVsZXMsIHByb3BlcnRpZXMpIHtcbiAgICBsZXQgdGhuZyA9IGF3YWl0IHVzZXIudGhuZygpLmNyZWF0ZSh7XG4gICAgICAgICduYW1lJzogYCR7UFJFRklYfSBUaG5nYCxcbiAgICAgICAgJ3Byb3BlcnRpZXMnOiBfLmFzc2lnbihwcm9wZXJ0aWVzLCBydWxlcyksXG4gICAgfSlcblxuICAgIGxvZygnVGhuZycsICdjcmVhdGVkJywgdGhuZylcbiAgICByZXR1cm4gdXNlci50aG5nKHRobmcuaWQpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUFjdGlvblR5cGVzIChuYW1lcykge1xuICAgIGxldCBhY3Rpb25UeXBlcyA9IFByb21pc2UuYWxsKG5hbWVzLm1hcChhc3luYyAobmFtZSkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IGFjdGlvblR5cGUgPSBhd2FpdCBvcGVyYXRvci5hY3Rpb25UeXBlKCkuY3JlYXRlKHsgbmFtZSB9KVxuXG4gICAgICAgICAgICBsb2coJ0FjdGlvblR5cGUnLCAnY3JlYXRlZCcsIGFjdGlvblR5cGUpXG5cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXMgIT09IDQwOSlcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKEpTT04uc3RyaW5naWZ5KGVycm9yKSlcbiAgICAgICAgfVxuICAgIH0pKVxufVxuXG5hc3luYyBmdW5jdGlvbiByZWFkUmVhY3RvclN0YXR1cyAoYXBwRGF0YSkge1xuICAgIGNvbnNvbGUubG9nKFxuICAgICAgICBgR2V0dGluZyB0aGUgUkVBQ1RPUiBzdGF0dXMgZm9yIEFwcCAnJHthcHBEYXRhLm5hbWV9JyB3aXRoIElEICcke2FwcERhdGEuaWR9Jy4uLmApXG5cbiAgICBsZXQgc3RhdHVzID0gYXdhaXQgcmVxdWVzdC5nZXQoe1xuICAgICAgICB1cmw6IGBodHRwczovL2FwaS5ldnJ5dGhuZy5jb20vJHthcHBEYXRhLnJlc291cmNlLnBhdGh9L3JlYWN0b3JTY3JpcHQvc3RhdHVzYCxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogc2V0dGluZ3Mub3BlcmF0b3JLZXksXG4gICAgICAgIH1cbiAgICB9KVxuXG4gICAgY29uc29sZS5sb2coYFJFQUNUT1Igc3RhdHVzOiAke3N0YXR1c31gKVxuICAgIHJldHVybiBzdGF0dXNcbn1cblxudGVzdCgnUkVBQ1RPUicsIGFzeW5jICh0KSA9PiB7XG4gICAgLy9sZXQgcHJvamVjdCA9IGF3YWl0IGNyZWF0ZVByb2plY3Qob3BlcmF0b3IpXG4gICAgLy9sZXQgYXBwID0gYXdhaXQgY3JlYXRlQXBwKHByb2plY3QpXG4gICAgbGV0IHByb2plY3QgPSBhd2FpdCBmZXRjaFByb2plY3Qoc2V0dGluZ3MpXG4gICAgbGV0IGFwcCA9IGF3YWl0IGZldGNoQXBwKHNldHRpbmdzKVxuICAgIGxldCB1c2VyID0gYXdhaXQgY3JlYXRlVXNlcihhcHApXG4gICAgbGV0IGNvbGxlY3Rpb24gPSBhd2FpdCBjcmVhdGVDb2xsZWN0aW9uKHVzZXIpXG4gICAgYXdhaXQgY3JlYXRlQWN0aW9uVHlwZXMoWydfZGltJywgJ19vbicsICdfb2ZmJ10pXG5cbiAgICBsZXQgcnVsZSA9IGdldFNhbXBsZVJ1bGUoKVxuICAgIHJ1bGUuY29uZGl0aW9ucyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgJ3ZhcmlhYmxlJzogJ29jY3VwYW5jeV9kZXRlY3RlZCcsXG4gICAgICAgICAgICAnb3BlcmF0b3InOiAnPScsXG4gICAgICAgICAgICAndmFsdWUnOiB0cnVlLFxuICAgICAgICAgICAgJ2xvZ2ljYWxfb3BlcmF0b3InOiAnYW5kJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgJ3ZhcmlhYmxlJzogJ2FtYmllbnRfbGlnaHQnLFxuICAgICAgICAgICAgJ29wZXJhdG9yJzogJz4nLFxuICAgICAgICAgICAgJ3ZhbHVlJzogMTAsXG4gICAgICAgICAgICAnbG9naWNhbF9vcGVyYXRvcic6IG51bGwsXG4gICAgICAgIH0sXG4gICAgXVxuICAgIHJ1bGUub3BlcmF0aW9ucyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgJ2NvbGxlY3Rpb25zJzogW1xuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb24uaWRcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAnYWN0aW9ucyc6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICduYW1lJzogJ19vZmYnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICduYW1lJzogJ19kaW0nLFxuICAgICAgICAgICAgICAgICAgICAncGFyYW1ldGVycyc6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICd2YWx1ZSc6IDFcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgIF1cblxuICAgIGxldCBydWxlcyA9IHsgJ19fcnVsZV9fNzgyODcyODcwMDEwMSc6IHJ1bGUgfVxuXG4gICAgbGV0IHByb3BlcnRpZXMgPSB7XG4gICAgICAgICdvY2N1cGFuY3lfZGV0ZWN0ZWQnOiBmYWxzZSxcbiAgICAgICAgJ2FtYmllbnRfbGlnaHQnOiA5LFxuICAgIH1cblxuICAgIGxldCB0aG5nID0gYXdhaXQgY3JlYXRlVGhuZyh1c2VyLCBydWxlcywgcHJvcGVydGllcylcblxuICAgIGxldCBwcm9wcyA9IGF3YWl0IHRobmcucHJvcGVydHkoJ2FtYmllbnRfbGlnaHQnKS51cGRhdGUoMTEpXG4gICAgbGV0IGFtYmllbnRfbGlnaHQgPSBwcm9wc1swXS52YWx1ZVxuICAgIHQuZXF1YWwoYW1iaWVudF9saWdodCwgMTEpXG5cbiAgICBwcm9wcyA9IGF3YWl0IHRobmcucHJvcGVydHkoJ29jY3VwYW5jeV9kZXRlY3RlZCcpLnVwZGF0ZSh0cnVlKVxuICAgIGxldCBvY2N1cGFuY3lfZGV0ZWN0ZWQgPSBwcm9wc1swXS52YWx1ZVxuICAgIHQuZXF1YWwob2NjdXBhbmN5X2RldGVjdGVkLCB0cnVlKVxuXG4gICAgbGV0IGFjdGlvbnMgPSBhd2FpdCBvcGVyYXRvci5hY3Rpb24oJ2FsbCcpLnJlYWQoKVxufSlcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "integration.test.js"
      ],
      "names": [
        "project",
        "operator",
        "create",
        "PREFIX",
        "log",
        "id",
        "createProject",
        "app",
        "application",
        "EVT",
        "App",
        "appApiKey",
        "createApp",
        "settings",
        "projectId",
        "read",
        "fetchProject",
        "applicationId",
        "fetchApp",
        "user",
        "appUser",
        "anonymous",
        "User",
        "createUser",
        "collection",
        "createCollection",
        "rules",
        "properties",
        "thng",
        "_",
        "assign",
        "createThng",
        "names",
        "actionTypes",
        "Promise",
        "all",
        "map",
        "name",
        "actionType",
        "error",
        "status",
        "console",
        "JSON",
        "stringify",
        "createActionTypes",
        "appData",
        "request",
        "get",
        "url",
        "resource",
        "path",
        "headers",
        "operatorKey",
        "readReactorStatus",
        "require",
        "fs",
        "test",
        "BASE_DIR",
        "__dirname",
        "Operator",
        "getSampleRule",
        "rule",
        "parse",
        "readFileSync",
        "objectType",
        "verb",
        "obj",
        "t",
        "conditions",
        "operations",
        "props",
        "property",
        "update",
        "ambient_light",
        "value",
        "equal",
        "occupancy_detected",
        "actions",
        "action"
      ],
      "mappings": "AAAA;;;iCAwBA,aAAgC;AAC5B,YAAIA,UAAU,MAAMC,SAASD,OAAT,GAAmBE,MAAnB,CAA0B;AAC1C,oBAAS,IAAEC,MAAO;AADwB,SAA1B,CAApB;;AAIAC,YAAI,SAAJ,EAAe,SAAf,EAA0BJ,OAA1B;AACA,eAAOC,SAASD,OAAT,CAAiBA,QAAQK,EAAzB,CAAP;AACH,K;;oBAPcC,a;;;;;;kCASf,WAA0BN,OAA1B,EAAmC;AAC/B,YAAIO,MAAM,MAAMP,QAAQQ,WAAR,GAAsBN,MAAtB,CAA6B;AACzC,oBAAS,IAAEC,MAAO,eADuB;AAEzC,8BAAkB;AAFuB,SAA7B,CAAhB;;AAKAC,YAAI,aAAJ,EAAmB,SAAnB,EAA8BG,GAA9B;AACA,eAAO,IAAIE,IAAIC,GAAR,CAAYH,IAAII,SAAhB,CAAP;AACH,K;;oBARcC,S;;;;;;kCAUf,WAA6BC,QAA7B,EAAuC;AACnC,YAAIb,UAAU,MAAMC,SACfD,OADe,CACPa,SAASC,SADF,EAEfC,IAFe,EAApB;;AAIAX,YAAI,SAAJ,EAAe,SAAf,EAA0BJ,OAA1B;AACA,eAAOC,SAASD,OAAT,CAAiBa,SAASC,SAA1B,CAAP;AACH,K;;oBAPcE,Y;;;;;;kCASf,WAAyBH,QAAzB,EAAmC;AAC/B,YAAIN,MAAM,MAAMN,SACXD,OADW,CACHa,SAASC,SADN,EAEXN,WAFW,CAECK,SAASI,aAFV,EAGXF,IAHW,EAAhB;;AAKAX,YAAI,aAAJ,EAAmB,SAAnB,EAA8BG,GAA9B;AACA,eAAO,IAAIE,IAAIC,GAAR,CAAYH,IAAII,SAAhB,CAAP;AACH,K;;oBARcO,Q;;;;;;kCAUf,WAA2BX,GAA3B,EAAgC;AAC5B,YAAIY,OAAO,MAAMZ,IAAIa,OAAJ,GAAclB,MAAd,CAAqB,EAAEmB,WAAW,IAAb,EAArB,CAAjB;AACAjB,YAAI,MAAJ,EAAY,SAAZ,EAAuBe,IAAvB;AACA,eAAO,IAAIV,IAAIa,IAAR,CAAaH,IAAb,EAAmBZ,GAAnB,CAAP;AACH,K;;oBAJcgB,U;;;;;;kCAMf,WAAiCJ,IAAjC,EAAuC;AACnC,YAAIK,aAAa,MAAML,KAAKK,UAAL,GAAkBtB,MAAlB,CAAyB;AAC5C,oBAAS,IAAEC,MAAO;AAD0B,SAAzB,CAAvB;;AAIAC,YAAI,YAAJ,EAAkB,SAAlB,EAA6BoB,UAA7B;AACA,eAAOA,UAAP;AACH,K;;oBAPcC,gB;;;;;;kCASf,WAA2BN,IAA3B,EAAiCO,KAAjC,EAAwCC,UAAxC,EAAoD;AAChD,YAAIC,OAAO,MAAMT,KAAKS,IAAL,GAAY1B,MAAZ,CAAmB;AAChC,oBAAS,IAAEC,MAAO,QADc;AAEhC,0BAAc0B,EAAEC,MAAF,CAASH,UAAT,EAAqBD,KAArB;AAFkB,SAAnB,CAAjB;;AAKAtB,YAAI,MAAJ,EAAY,SAAZ,EAAuBwB,IAAvB;AACA,eAAOT,KAAKS,IAAL,CAAUA,KAAKvB,EAAf,CAAP;AACH,K;;oBARc0B,U;;;;;;kCAUf,WAAkCC,KAAlC,EAAyC;AACrC,YAAIC,cAAcC,QAAQC,GAAR,CAAYH,MAAMI,GAAN;AAAA,0CAAU,WAAOC,IAAP,EAAgB;AACpD,oBAAI;AACA,wBAAIC,aAAa,MAAMrC,SAASqC,UAAT,GAAsBpC,MAAtB,CAA6B,EAAEmC,IAAF,EAA7B,CAAvB;;AAEAjC,wBAAI,YAAJ,EAAkB,SAAlB,EAA6BkC,UAA7B;AAEH,iBALD,CAKE,OAAOC,KAAP,EAAc;AACZ,wBAAIA,MAAMC,MAAN,KAAiB,GAArB,EACIC,QAAQF,KAAR,CAAcG,KAAKC,SAAL,CAAeJ,KAAf,CAAd;AACP;AACJ,aAV6B;;AAAA;AAAA;AAAA;AAAA,aAAZ,CAAlB;AAWH,K;;oBAZcK,iB;;;;;;mCAcf,WAAkCC,OAAlC,EAA2C;AACvCJ,gBAAQrC,GAAR,CACK,wCAAsCyC,QAAQR,IAAK,gBAAaQ,QAAQxC,EAAG,OADhF;;AAGA,YAAImC,SAAS,MAAMM,QAAQC,GAAR,CAAY;AAC3BC,iBAAM,6BAA2BH,QAAQI,QAAR,CAAiBC,IAAK,wBAD5B;AAE3BC,qBAAS;AACL,0BAAU,kBADL;AAEL,iCAAiBtC,SAASuC;AAFrB;AAFkB,SAAZ,CAAnB;;AAQAX,gBAAQrC,GAAR,CAAa,oBAAkBoC,MAAO,GAAtC;AACA,eAAOA,MAAP;AACH,K;;oBAdca,iB;;;;;;;AApGf,IAAIxB,IAAIyB,QAAQ,QAAR,CAAR;AACA,IAAI7C,MAAM6C,QAAQ,mBAAR,CAAV;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIR,UAAUQ,QAAQ,iBAAR,CAAd;AACA,IAAIE,OAAOF,QAAQ,WAAR,CAAX;;AAEA,IAAIG,WAAY,IAAEC,SAAU,MAA5B;AACA,IAAIvD,SAAS,SAAb;;AAEA,IAAIU,WAAWyC,QAAS,IAAEG,QAAS,uBAApB,CAAf;;AAEA,IAAIxD,WAAW,IAAIQ,IAAIkD,QAAR,CAAiB9C,SAASuC,WAA1B,CAAf;;AAEA,SAASQ,aAAT,GAA0B;AACtB,QAAIC,OAAOnB,KAAKoB,KAAL,CAAWP,GAAGQ,YAAH,CAAiB,IAAEN,QAAS,oCAA5B,EAAgE,MAAhE,CAAX,CAAX;AACAI,SAAKxB,IAAL,GAAa,IAAElC,MAAO,QAAtB;AACA,WAAO0D,IAAP;AACH;;AAED,SAASzD,GAAT,CAAc4D,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqC;AACjCzB,YAAQrC,GAAR,CAAa,IAAE4D,UAAW,OAAIE,IAAI7B,IAAK,OAAI4B,IAAK,eAAYC,IAAI7D,EAAG,IAAnE;AACH;;AA+FDmD,KAAK,SAAL;AAAA,mCAAgB,WAAOW,CAAP,EAAa;AACzB;AACA;AACA,YAAInE,UAAU,MAAMgB,aAAaH,QAAb,CAApB;AACA,YAAIN,MAAM,MAAMW,SAASL,QAAT,CAAhB;AACA,YAAIM,OAAO,MAAMI,WAAWhB,GAAX,CAAjB;AACA,YAAIiB,aAAa,MAAMC,iBAAiBN,IAAjB,CAAvB;AACA,cAAMyB,kBAAkB,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,CAAlB,CAAN;;AAEA,YAAIiB,OAAOD,eAAX;AACAC,aAAKO,UAAL,GAAkB,CACd;AACI,wBAAY,oBADhB;AAEI,wBAAY,GAFhB;AAGI,qBAAS,IAHb;AAII,gCAAoB;AAJxB,SADc,EAOd;AACI,wBAAY,eADhB;AAEI,wBAAY,GAFhB;AAGI,qBAAS,EAHb;AAII,gCAAoB;AAJxB,SAPc,CAAlB;AAcAP,aAAKQ,UAAL,GAAkB,CACd;AACI,2BAAe,CACX7C,WAAWnB,EADA,CADnB;AAII,uBAAW,CACP;AACI,wBAAQ;AADZ,aADO,EAIP;AACI,wBAAQ,MADZ;AAEI,8BAAc;AACV,6BAAS;AADC;AAFlB,aAJO;AAJf,SADc,CAAlB;;AAmBA,YAAIqB,QAAQ,EAAE,yBAAyBmC,IAA3B,EAAZ;;AAEA,YAAIlC,aAAa;AACb,kCAAsB,KADT;AAEb,6BAAiB;AAFJ,SAAjB;;AAKA,YAAIC,OAAO,MAAMG,WAAWZ,IAAX,EAAiBO,KAAjB,EAAwBC,UAAxB,CAAjB;;AAEA,YAAI2C,QAAQ,MAAM1C,KAAK2C,QAAL,CAAc,eAAd,EAA+BC,MAA/B,CAAsC,EAAtC,CAAlB;AACA,YAAIC,gBAAgBH,MAAM,CAAN,EAASI,KAA7B;AACAP,UAAEQ,KAAF,CAAQF,aAAR,EAAuB,EAAvB;;AAEAH,gBAAQ,MAAM1C,KAAK2C,QAAL,CAAc,oBAAd,EAAoCC,MAApC,CAA2C,IAA3C,CAAd;AACA,YAAII,qBAAqBN,MAAM,CAAN,EAASI,KAAlC;AACAP,UAAEQ,KAAF,CAAQC,kBAAR,EAA4B,IAA5B;;AAEA,YAAIC,UAAU,MAAM5E,SAAS6E,MAAT,CAAgB,KAAhB,EAAuB/D,IAAvB,EAApB;AACH,KA7DD;;AAAA;AAAA;AAAA;AAAA",
      "file": "integration.test.js",
      "sourceRoot": "/Users/dtr/gooee/REACTOR/tests",
      "sourcesContent": [
        "'use strict'\nlet _ = require('lodash')\nlet EVT = require('evrythng-extended')\nlet fs = require('fs')\nlet request = require('request-promise')\nlet test = require('blue-tape')\n\nlet BASE_DIR = `${__dirname}/..`\nlet PREFIX = 'REACTOR'\n\nlet settings = require(`${BASE_DIR}/uploadSettings.json`)\n\nlet operator = new EVT.Operator(settings.operatorKey)\n\nfunction getSampleRule () {\n    let rule = JSON.parse(fs.readFileSync(`${BASE_DIR}/tests/shared/rules-sample-1.json`, 'utf8'))\n    rule.name = `${PREFIX} Rule`\n    return rule\n}\n\nfunction log (objectType, verb, obj) {\n    console.log(`${objectType} '${obj.name}' ${verb} with ID '${obj.id}'`)\n}\n\nasync function createProject () {\n    let project = await operator.project().create({\n        'name': `${PREFIX} Project`\n    })\n\n    log('Project', 'created', project)\n    return operator.project(project.id)\n}\n\nasync function createApp (project) {\n    let app = await project.application().create({\n        'name': `${PREFIX} Application`,\n        'socialNetworks': {},\n    })\n\n    log('Application', 'created', app)\n    return new EVT.App(app.appApiKey)\n}\n\nasync function fetchProject (settings) {\n    let project = await operator\n        .project(settings.projectId)\n        .read()\n\n    log('Project', 'fetched', project)\n    return operator.project(settings.projectId)\n}\n\nasync function fetchApp (settings) {\n    let app = await operator\n        .project(settings.projectId)\n        .application(settings.applicationId)\n        .read()\n\n    log('Application', 'fetched', app)\n    return new EVT.App(app.appApiKey)\n}\n\nasync function createUser (app) {\n    let user = await app.appUser().create({ anonymous: true })\n    log('User', 'created', user)\n    return new EVT.User(user, app)\n}\n\nasync function createCollection (user) {\n    let collection = await user.collection().create({\n        'name': `${PREFIX} Collection`,\n    })\n\n    log('Collection', 'created', collection)\n    return collection\n}\n\nasync function createThng (user, rules, properties) {\n    let thng = await user.thng().create({\n        'name': `${PREFIX} Thng`,\n        'properties': _.assign(properties, rules),\n    })\n\n    log('Thng', 'created', thng)\n    return user.thng(thng.id)\n}\n\nasync function createActionTypes (names) {\n    let actionTypes = Promise.all(names.map(async (name) => {\n        try {\n            let actionType = await operator.actionType().create({ name })\n\n            log('ActionType', 'created', actionType)\n\n        } catch (error) {\n            if (error.status !== 409)\n                console.error(JSON.stringify(error))\n        }\n    }))\n}\n\nasync function readReactorStatus (appData) {\n    console.log(\n        `Getting the REACTOR status for App '${appData.name}' with ID '${appData.id}'...`)\n\n    let status = await request.get({\n        url: `https://api.evrythng.com/${appData.resource.path}/reactorScript/status`,\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': settings.operatorKey,\n        }\n    })\n\n    console.log(`REACTOR status: ${status}`)\n    return status\n}\n\ntest('REACTOR', async (t) => {\n    //let project = await createProject(operator)\n    //let app = await createApp(project)\n    let project = await fetchProject(settings)\n    let app = await fetchApp(settings)\n    let user = await createUser(app)\n    let collection = await createCollection(user)\n    await createActionTypes(['_dim', '_on', '_off'])\n\n    let rule = getSampleRule()\n    rule.conditions = [\n        {\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': true,\n            'logical_operator': 'and',\n        },\n        {\n            'variable': 'ambient_light',\n            'operator': '>',\n            'value': 10,\n            'logical_operator': null,\n        },\n    ]\n    rule.operations = [\n        {\n            'collections': [\n                collection.id\n            ],\n            'actions': [\n                {\n                    'name': '_off'\n                },\n                {\n                    'name': '_dim',\n                    'parameters': {\n                        'value': 1\n                    }\n                }\n            ]\n        }\n    ]\n\n    let rules = { '__rule__7828728700101': rule }\n\n    let properties = {\n        'occupancy_detected': false,\n        'ambient_light': 9,\n    }\n\n    let thng = await createThng(user, rules, properties)\n\n    let props = await thng.property('ambient_light').update(11)\n    let ambient_light = props[0].value\n    t.equal(ambient_light, 11)\n\n    props = await thng.property('occupancy_detected').update(true)\n    let occupancy_detected = props[0].value\n    t.equal(occupancy_detected, true)\n\n    let actions = await operator.action('all').read()\n})\n"
      ]
    },
    "mtime": 1472579343000
  },
  "{\"filename\":\"/Users/dtr/gooee/REACTOR/tests/integration.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/dtr/gooee/REACTOR/tests\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false}:6.14.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/dtr/gooee/REACTOR/tests/integration.test.js",
      "filenameRelative": "/Users/dtr/gooee/REACTOR/tests/integration.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "integration.test.js",
      "sourceFileName": "integration.test.js",
      "sourceRoot": "/Users/dtr/gooee/REACTOR/tests",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/dtr/gooee/REACTOR/tests",
      "moduleIds": false,
      "passPerPreset": false,
      "basename": "integration.test"
    },
    "ignored": false,
    "code": "'use strict';\n\nlet createProject = (() => {\n    var _ref = _asyncToGenerator(function* () {\n        let project = yield operator.project().create({\n            'name': `${ PREFIX } Project`\n        });\n\n        log('Project', 'created', project);\n        return operator.project(project.id);\n    });\n\n    return function createProject() {\n        return _ref.apply(this, arguments);\n    };\n})();\n\nlet createApp = (() => {\n    var _ref2 = _asyncToGenerator(function* (project) {\n        let app = yield project.application().create({\n            'name': `${ PREFIX } Application`,\n            'socialNetworks': {}\n        });\n\n        log('Application', 'created', app);\n        return new EVT.App(app.appApiKey);\n    });\n\n    return function createApp(_x) {\n        return _ref2.apply(this, arguments);\n    };\n})();\n\nlet fetchProject = (() => {\n    var _ref3 = _asyncToGenerator(function* (settings) {\n        let project = yield operator.project(settings.projectId).read();\n\n        log('Project', 'fetched', project);\n        return operator.project(settings.projectId);\n    });\n\n    return function fetchProject(_x2) {\n        return _ref3.apply(this, arguments);\n    };\n})();\n\nlet fetchApp = (() => {\n    var _ref4 = _asyncToGenerator(function* (settings) {\n        let app = yield operator.project(settings.projectId).application(settings.applicationId).read();\n\n        log('Application', 'fetched', app);\n        return new EVT.App(app.appApiKey);\n    });\n\n    return function fetchApp(_x3) {\n        return _ref4.apply(this, arguments);\n    };\n})();\n\nlet createUser = (() => {\n    var _ref5 = _asyncToGenerator(function* (app) {\n        let user = yield app.appUser().create({ anonymous: true });\n        log('User', 'created', user);\n        return new EVT.User(user, app);\n    });\n\n    return function createUser(_x4) {\n        return _ref5.apply(this, arguments);\n    };\n})();\n\nlet createCollection = (() => {\n    var _ref6 = _asyncToGenerator(function* (user) {\n        let collection = yield user.collection().create({\n            'name': `${ PREFIX } Collection`\n        });\n\n        log('Collection', 'created', collection);\n        return collection;\n    });\n\n    return function createCollection(_x5) {\n        return _ref6.apply(this, arguments);\n    };\n})();\n\nlet createThng = (() => {\n    var _ref7 = _asyncToGenerator(function* (user, rules, properties) {\n        let thng = yield user.thng().create({\n            'name': `${ PREFIX } Thng`,\n            'properties': _.assign(properties, rules)\n        });\n\n        log('Thng', 'created', thng);\n        return user.thng(thng.id);\n    });\n\n    return function createThng(_x6, _x7, _x8) {\n        return _ref7.apply(this, arguments);\n    };\n})();\n\nlet createActionTypes = (() => {\n    var _ref8 = _asyncToGenerator(function* (names) {\n        let actionTypes = Promise.all(names.map((() => {\n            var _ref9 = _asyncToGenerator(function* (name) {\n                try {\n                    let actionType = yield operator.actionType().create({ name });\n                    // TODO: rescope action types\n\n                    log('ActionType', 'created', actionType);\n                } catch (error) {\n                    if (error.status !== 409) console.error(JSON.stringify(error));\n                }\n            });\n\n            return function (_x10) {\n                return _ref9.apply(this, arguments);\n            };\n        })()));\n    });\n\n    return function createActionTypes(_x9) {\n        return _ref8.apply(this, arguments);\n    };\n})();\n\nlet readReactorStatus = (() => {\n    var _ref10 = _asyncToGenerator(function* (appData) {\n        console.log(`Getting the REACTOR status for App '${ appData.name }' with ID '${ appData.id }'...`);\n\n        let status = yield request.get({\n            url: `https://api.evrythng.com/${ appData.resource.path }/reactorScript/status`,\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': settings.operatorKey\n            }\n        });\n\n        console.log(`REACTOR status: ${ status }`);\n        return status;\n    });\n\n    return function readReactorStatus(_x11) {\n        return _ref10.apply(this, arguments);\n    };\n})();\n\nlet deleteAllActions = (() => {\n    var _ref11 = _asyncToGenerator(function* (user) {\n        yield user.action('all').read().then(function (actions) {\n\n            return Promise.all(_.map(actions, function (action) {\n                return operator.action(action.type, action.id).delete();\n            })).catch(function (error) {\n                console.log(`Error deleting Actions: ${ JSON.stringify(error, null, 2) }`);\n            });\n        });\n\n        console.log('All Actions deleted');\n    });\n\n    return function deleteAllActions(_x12) {\n        return _ref11.apply(this, arguments);\n    };\n})();\n\nlet setupFixtures = (() => {\n    var _ref12 = _asyncToGenerator(function* () {\n        //let project = await createProject(operator)\n        //let app = await createApp(project)\n        let project = yield fetchProject(settings);\n        let app = yield fetchApp(settings);\n        let user = yield createUser(app);\n        yield deleteAllActions(user);\n        let collection = yield createCollection(user);\n        yield createActionTypes(['_dim', '_on', '_off']);\n\n        return { project, app, user, collection };\n    });\n\n    return function setupFixtures() {\n        return _ref12.apply(this, arguments);\n    };\n})();\n\nlet tearDown = (() => {\n    var _ref13 = _asyncToGenerator(function* (fixtures) {\n        yield deleteAllActions(fixtures.user);\n    });\n\n    return function tearDown(_x13) {\n        return _ref13.apply(this, arguments);\n    };\n})();\n\nlet test1 = (() => {\n    var _ref14 = _asyncToGenerator(function* (t) {\n        var _ref15 = yield setupFixtures();\n\n        let project = _ref15.project;\n        let app = _ref15.app;\n        let user = _ref15.user;\n        let collection = _ref15.collection;\n\n        let rule = getSampleRule();\n        rule.conditions = [{\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': true,\n            'logical_operator': 'and'\n        }, {\n            'variable': 'ambient_light',\n            'operator': '>',\n            'value': 10,\n            'logical_operator': null\n        }];\n        rule.operations = [{\n            'collections': [collection.id],\n            'actions': [{\n                'name': '_off'\n            }, {\n                'name': '_dim',\n                'parameters': {\n                    'value': 1\n                }\n            }]\n        }];\n\n        let rules = { '__rule__7828728700101': rule };\n\n        let properties = {\n            'occupancy_detected': false,\n            'ambient_light': 9\n        };\n\n        let actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        let thng = yield createThng(user, rules, properties);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        let props = yield thng.property('ambient_light').update(11);\n        let ambient_light = props[0].value;\n        t.equal(ambient_light, 11);\n\n        props = yield thng.property('occupancy_detected').update(true);\n        let occupancy_detected = props[0].value;\n        t.equal(occupancy_detected, true);\n\n        sleep.sleep(1);\n\n        actions = yield user.action('all').read();\n\n        t.equal(actions.length, 2);\n\n        yield tearDown({ user });\n    });\n\n    return function test1(_x14) {\n        return _ref14.apply(this, arguments);\n    };\n})();\n\nlet test2 = (() => {\n    var _ref16 = _asyncToGenerator(function* (t) {\n        var _ref17 = yield setupFixtures();\n\n        let project = _ref17.project;\n        let app = _ref17.app;\n        let user = _ref17.user;\n        let collection = _ref17.collection;\n\n        let rule = getSampleRule();\n        let today = moment.utc().format('ddd').toLowerCase();\n        console.log(today);\n        rule.conditions = [{\n            'variable': 'day_of_week',\n            'operator': '=',\n            'value': [today],\n            'logical_operator': 'and'\n        }, {\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': false,\n            'logical_operator': null\n        }];\n        rule.operations = [{\n            'collections': [collection.id],\n            'actions': [{\n                'name': '_dim',\n                'parameters': {\n                    'value': 5\n                }\n            }]\n        }];\n\n        let rules = { '__rule__7828728700101': rule };\n\n        let properties = {\n            'occupancy_detected': false,\n            'colour_temperature': 3\n        };\n\n        let actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        let thng = yield createThng(user, rules, properties);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 1);\n        t.equal(actions[0].type, '_dim');\n        t.equal(actions[0].customFields.value, 5);\n\n        // This update should, since we've waited.\n        let props = yield thng.property('colour_temperature').update(4);\n        let colour_temperature = props[0].value;\n        t.equal(colour_temperature, 4);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 2);\n\n        yield tearDown({ user });\n    });\n\n    return function test2(_x15) {\n        return _ref16.apply(this, arguments);\n    };\n})();\n\nlet test3 = (() => {\n    var _ref18 = _asyncToGenerator(function* (t) {\n        var _ref19 = yield setupFixtures();\n\n        let project = _ref19.project;\n        let app = _ref19.app;\n        let user = _ref19.user;\n        let collection = _ref19.collection;\n\n        let rule = getSampleRule();\n        let soon = moment.utc().add(5, 'seconds').format('HH:mm:ss');\n        rule.conditions = [{\n            'variable': 'time_of_day',\n            'operator': '>',\n            'value': soon,\n            'logical_operator': null\n        }];\n        rule.operations = [{\n            'collections': [collection.id],\n            'actions': [{\n                'name': '_on'\n            }]\n        }];\n\n        let rules = { '__rule__7828728700101': rule };\n\n        let properties = {\n            'ambient_light': 1\n        };\n\n        let actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        let thng = yield createThng(user, rules, properties);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        // This update shouldn't trigger an action, since it's not time yet.\n        let props = yield thng.property('ambient_light').update(2);\n        let ambient_light = props[0].value;\n        t.equal(ambient_light, 2);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        sleep.sleep(3);\n\n        // This update should, since we've waited.\n        props = yield thng.property('ambient_light').update(3);\n        ambient_light = props[0].value;\n        t.equal(ambient_light, 3);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 1);\n        t.equal(actions.length, 1);\n        t.equal(actions[0].type, '_on');\n\n        yield tearDown({ user });\n    });\n\n    return function test3(_x16) {\n        return _ref18.apply(this, arguments);\n    };\n})();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { return step(\"next\", value); }, function (err) { return step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nlet _ = require('lodash');\nlet EVT = require('evrythng-extended');\nlet fs = require('fs');\nlet moment = require('moment');\nlet request = require('request-promise');\nlet sleep = require('sleep');\nlet test = require('blue-tape');\n\nlet BASE_DIR = `${ __dirname }/..`;\nlet PREFIX = 'REACTOR';\n\nlet settings = require(`${ BASE_DIR }/uploadSettings.json`);\n\nlet operator = new EVT.Operator(settings.operatorKey);\n\nfunction getSampleRule() {\n    let rule = JSON.parse(fs.readFileSync(`${ BASE_DIR }/tests/shared/rules-sample-1.json`, 'utf8'));\n    rule.name = `${ PREFIX } Rule`;\n    return rule;\n}\n\nfunction log(objectType, verb, obj) {\n    console.log(`${ objectType } '${ obj.name }' ${ verb } with ID '${ obj.id }'`);\n}\n\ntest('Integration tests', (() => {\n    var _ref20 = _asyncToGenerator(function* (t) {\n        yield test1(t);\n        yield test2(t);\n        yield test3(t);\n    });\n\n    return function (_x17) {\n        return _ref20.apply(this, arguments);\n    };\n})());\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVncmF0aW9uLnRlc3QuanMiXSwibmFtZXMiOlsicHJvamVjdCIsIm9wZXJhdG9yIiwiY3JlYXRlIiwiUFJFRklYIiwibG9nIiwiaWQiLCJjcmVhdGVQcm9qZWN0IiwiYXBwIiwiYXBwbGljYXRpb24iLCJFVlQiLCJBcHAiLCJhcHBBcGlLZXkiLCJjcmVhdGVBcHAiLCJzZXR0aW5ncyIsInByb2plY3RJZCIsInJlYWQiLCJmZXRjaFByb2plY3QiLCJhcHBsaWNhdGlvbklkIiwiZmV0Y2hBcHAiLCJ1c2VyIiwiYXBwVXNlciIsImFub255bW91cyIsIlVzZXIiLCJjcmVhdGVVc2VyIiwiY29sbGVjdGlvbiIsImNyZWF0ZUNvbGxlY3Rpb24iLCJydWxlcyIsInByb3BlcnRpZXMiLCJ0aG5nIiwiXyIsImFzc2lnbiIsImNyZWF0ZVRobmciLCJuYW1lcyIsImFjdGlvblR5cGVzIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsIm5hbWUiLCJhY3Rpb25UeXBlIiwiZXJyb3IiLCJzdGF0dXMiLCJjb25zb2xlIiwiSlNPTiIsInN0cmluZ2lmeSIsImNyZWF0ZUFjdGlvblR5cGVzIiwiYXBwRGF0YSIsInJlcXVlc3QiLCJnZXQiLCJ1cmwiLCJyZXNvdXJjZSIsInBhdGgiLCJoZWFkZXJzIiwib3BlcmF0b3JLZXkiLCJyZWFkUmVhY3RvclN0YXR1cyIsImFjdGlvbiIsInRoZW4iLCJhY3Rpb25zIiwidHlwZSIsImRlbGV0ZSIsImNhdGNoIiwiZGVsZXRlQWxsQWN0aW9ucyIsInNldHVwRml4dHVyZXMiLCJmaXh0dXJlcyIsInRlYXJEb3duIiwidCIsInJ1bGUiLCJnZXRTYW1wbGVSdWxlIiwiY29uZGl0aW9ucyIsIm9wZXJhdGlvbnMiLCJlcXVhbCIsImxlbmd0aCIsInNsZWVwIiwicHJvcHMiLCJwcm9wZXJ0eSIsInVwZGF0ZSIsImFtYmllbnRfbGlnaHQiLCJ2YWx1ZSIsIm9jY3VwYW5jeV9kZXRlY3RlZCIsInRlc3QxIiwidG9kYXkiLCJtb21lbnQiLCJ1dGMiLCJmb3JtYXQiLCJ0b0xvd2VyQ2FzZSIsImN1c3RvbUZpZWxkcyIsImNvbG91cl90ZW1wZXJhdHVyZSIsInRlc3QyIiwic29vbiIsImFkZCIsInRlc3QzIiwicmVxdWlyZSIsImZzIiwidGVzdCIsIkJBU0VfRElSIiwiX19kaXJuYW1lIiwiT3BlcmF0b3IiLCJwYXJzZSIsInJlYWRGaWxlU3luYyIsIm9iamVjdFR5cGUiLCJ2ZXJiIiwib2JqIl0sIm1hcHBpbmdzIjoiQUFBQTs7O2lDQTBCQSxhQUFnQztBQUM1QixZQUFJQSxVQUFVLE1BQU1DLFNBQVNELE9BQVQsR0FBbUJFLE1BQW5CLENBQTBCO0FBQzFDLG9CQUFTLElBQUVDLE1BQU87QUFEd0IsU0FBMUIsQ0FBcEI7O0FBSUFDLFlBQUksU0FBSixFQUFlLFNBQWYsRUFBMEJKLE9BQTFCO0FBQ0EsZUFBT0MsU0FBU0QsT0FBVCxDQUFpQkEsUUFBUUssRUFBekIsQ0FBUDtBQUNILEs7O29CQVBjQyxhOzs7Ozs7a0NBU2YsV0FBMEJOLE9BQTFCLEVBQW1DO0FBQy9CLFlBQUlPLE1BQU0sTUFBTVAsUUFBUVEsV0FBUixHQUFzQk4sTUFBdEIsQ0FBNkI7QUFDekMsb0JBQVMsSUFBRUMsTUFBTyxlQUR1QjtBQUV6Qyw4QkFBa0I7QUFGdUIsU0FBN0IsQ0FBaEI7O0FBS0FDLFlBQUksYUFBSixFQUFtQixTQUFuQixFQUE4QkcsR0FBOUI7QUFDQSxlQUFPLElBQUlFLElBQUlDLEdBQVIsQ0FBWUgsSUFBSUksU0FBaEIsQ0FBUDtBQUNILEs7O29CQVJjQyxTOzs7Ozs7a0NBVWYsV0FBNkJDLFFBQTdCLEVBQXVDO0FBQ25DLFlBQUliLFVBQVUsTUFBTUMsU0FDZkQsT0FEZSxDQUNQYSxTQUFTQyxTQURGLEVBRWZDLElBRmUsRUFBcEI7O0FBSUFYLFlBQUksU0FBSixFQUFlLFNBQWYsRUFBMEJKLE9BQTFCO0FBQ0EsZUFBT0MsU0FBU0QsT0FBVCxDQUFpQmEsU0FBU0MsU0FBMUIsQ0FBUDtBQUNILEs7O29CQVBjRSxZOzs7Ozs7a0NBU2YsV0FBeUJILFFBQXpCLEVB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T0FBSThELElBQUssZUFBWUMsSUFBSS9GLEVBQUcsSUFBbkU7QUFDSDs7QUF3VUR1RixLQUFLLG1CQUFMO0FBQUEsbUNBQTBCLFdBQU81QixDQUFQLEVBQWE7QUFDbkMsY0FBTWMsTUFBTWQsQ0FBTixDQUFOO0FBQ0EsY0FBTXNCLE1BQU10QixDQUFOLENBQU47QUFDQSxjQUFNeUIsTUFBTXpCLENBQU4sQ0FBTjtBQUNILEtBSkQ7O0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiaW50ZWdyYXRpb24udGVzdC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZHRyL2dvb2VlL1JFQUNUT1IvdGVzdHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbmxldCBfID0gcmVxdWlyZSgnbG9kYXNoJylcbmxldCBFVlQgPSByZXF1aXJlKCdldnJ5dGhuZy1leHRlbmRlZCcpXG5sZXQgZnMgPSByZXF1aXJlKCdmcycpXG5sZXQgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50JylcbmxldCByZXF1ZXN0ID0gcmVxdWlyZSgncmVxdWVzdC1wcm9taXNlJylcbmxldCBzbGVlcCA9IHJlcXVpcmUoJ3NsZWVwJylcbmxldCB0ZXN0ID0gcmVxdWlyZSgnYmx1ZS10YXBlJylcblxubGV0IEJBU0VfRElSID0gYCR7X19kaXJuYW1lfS8uLmBcbmxldCBQUkVGSVggPSAnUkVBQ1RPUidcblxubGV0IHNldHRpbmdzID0gcmVxdWlyZShgJHtCQVNFX0RJUn0vdXBsb2FkU2V0dGluZ3MuanNvbmApXG5cbmxldCBvcGVyYXRvciA9IG5ldyBFVlQuT3BlcmF0b3Ioc2V0dGluZ3Mub3BlcmF0b3JLZXkpXG5cbmZ1bmN0aW9uIGdldFNhbXBsZVJ1bGUgKCkge1xuICAgIGxldCBydWxlID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmMoYCR7QkFTRV9ESVJ9L3Rlc3RzL3NoYXJlZC9ydWxlcy1zYW1wbGUtMS5qc29uYCwgJ3V0ZjgnKSlcbiAgICBydWxlLm5hbWUgPSBgJHtQUkVGSVh9IFJ1bGVgXG4gICAgcmV0dXJuIHJ1bGVcbn1cblxuZnVuY3Rpb24gbG9nIChvYmplY3RUeXBlLCB2ZXJiLCBvYmopIHtcbiAgICBjb25zb2xlLmxvZyhgJHtvYmplY3RUeXBlfSAnJHtvYmoubmFtZX0nICR7dmVyYn0gd2l0aCBJRCAnJHtvYmouaWR9J2ApXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVByb2plY3QgKCkge1xuICAgIGxldCBwcm9qZWN0ID0gYXdhaXQgb3BlcmF0b3IucHJvamVjdCgpLmNyZWF0ZSh7XG4gICAgICAgICduYW1lJzogYCR7UFJFRklYfSBQcm9qZWN0YFxuICAgIH0pXG5cbiAgICBsb2coJ1Byb2plY3QnLCAnY3JlYXRlZCcsIHByb2plY3QpXG4gICAgcmV0dXJuIG9wZXJhdG9yLnByb2plY3QocHJvamVjdC5pZClcbn1cblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlQXBwIChwcm9qZWN0KSB7XG4gICAgbGV0IGFwcCA9IGF3YWl0IHByb2plY3QuYXBwbGljYXRpb24oKS5jcmVhdGUoe1xuICAgICAgICAnbmFtZSc6IGAke1BSRUZJWH0gQXBwbGljYXRpb25gLFxuICAgICAgICAnc29jaWFsTmV0d29ya3MnOiB7fSxcbiAgICB9KVxuXG4gICAgbG9nKCdBcHBsaWNhdGlvbicsICdjcmVhdGVkJywgYXBwKVxuICAgIHJldHVybiBuZXcgRVZULkFwcChhcHAuYXBwQXBpS2V5KVxufVxuXG5hc3luYyBmdW5jdGlvbiBmZXRjaFByb2plY3QgKHNldHRpbmdzKSB7XG4gICAgbGV0IHByb2plY3QgPSBhd2FpdCBvcGVyYXRvclxuICAgICAgICAucHJvamVjdChzZXR0aW5ncy5wcm9qZWN0SWQpXG4gICAgICAgIC5yZWFkKClcblxuICAgIGxvZygnUHJvamVjdCcsICdmZXRjaGVkJywgcHJvamVjdClcbiAgICByZXR1cm4gb3BlcmF0b3IucHJvamVjdChzZXR0aW5ncy5wcm9qZWN0SWQpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGZldGNoQXBwIChzZXR0aW5ncykge1xuICAgIGxldCBhcHAgPSBhd2FpdCBvcGVyYXRvclxuICAgICAgICAucHJvamVjdChzZXR0aW5ncy5wcm9qZWN0SWQpXG4gICAgICAgIC5hcHBsaWNhdGlvbihzZXR0aW5ncy5hcHBsaWNhdGlvbklkKVxuICAgICAgICAucmVhZCgpXG5cbiAgICBsb2coJ0FwcGxpY2F0aW9uJywgJ2ZldGNoZWQnLCBhcHApXG4gICAgcmV0dXJuIG5ldyBFVlQuQXBwKGFwcC5hcHBBcGlLZXkpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVVzZXIgKGFwcCkge1xuICAgIGxldCB1c2VyID0gYXdhaXQgYXBwLmFwcFVzZXIoKS5jcmVhdGUoeyBhbm9ueW1vdXM6IHRydWUgfSlcbiAgICBsb2coJ1VzZXInLCAnY3JlYXRlZCcsIHVzZXIpXG4gICAgcmV0dXJuIG5ldyBFVlQuVXNlcih1c2VyLCBhcHApXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNvbGxlY3Rpb24gKHVzZXIpIHtcbiAgICBsZXQgY29sbGVjdGlvbiA9IGF3YWl0IHVzZXIuY29sbGVjdGlvbigpLmNyZWF0ZSh7XG4gICAgICAgICduYW1lJzogYCR7UFJFRklYfSBDb2xsZWN0aW9uYCxcbiAgICB9KVxuXG4gICAgbG9nKCdDb2xsZWN0aW9uJywgJ2NyZWF0ZWQnLCBjb2xsZWN0aW9uKVxuICAgIHJldHVybiBjb2xsZWN0aW9uXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVRobmcgKHVzZXIsIHJ1bGVzLCBwcm9wZXJ0aWVzKSB7XG4gICAgbGV0IHRobmcgPSBhd2FpdCB1c2VyLnRobmcoKS5jcmVhdGUoe1xuICAgICAgICAnbmFtZSc6IGAke1BSRUZJWH0gVGhuZ2AsXG4gICAgICAgICdwcm9wZXJ0aWVzJzogXy5hc3NpZ24ocHJvcGVydGllcywgcnVsZXMpLFxuICAgIH0pXG5cbiAgICBsb2coJ1RobmcnLCAnY3JlYXRlZCcsIHRobmcpXG4gICAgcmV0dXJuIHVzZXIudGhuZyh0aG5nLmlkKVxufVxuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVBY3Rpb25UeXBlcyAobmFtZXMpIHtcbiAgICBsZXQgYWN0aW9uVHlwZXMgPSBQcm9taXNlLmFsbChuYW1lcy5tYXAoYXN5bmMgKG5hbWUpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGxldCBhY3Rpb25UeXBlID0gYXdhaXQgb3BlcmF0b3IuYWN0aW9uVHlwZSgpLmNyZWF0ZSh7IG5hbWUgfSlcbiAgICAgICAgICAgIC8vIFRPRE86IHJlc2NvcGUgYWN0aW9uIHR5cGVzXG5cbiAgICAgICAgICAgIGxvZygnQWN0aW9uVHlwZScsICdjcmVhdGVkJywgYWN0aW9uVHlwZSlcblxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKGVycm9yLnN0YXR1cyAhPT0gNDA5KVxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoSlNPTi5zdHJpbmdpZnkoZXJyb3IpKVxuICAgICAgICB9XG4gICAgfSkpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlYWRSZWFjdG9yU3RhdHVzIChhcHBEYXRhKSB7XG4gICAgY29uc29sZS5sb2coXG4gICAgICAgIGBHZXR0aW5nIHRoZSBSRUFDVE9SIHN0YXR1cyBmb3IgQXBwICcke2FwcERhdGEubmFtZX0nIHdpdGggSUQgJyR7YXBwRGF0YS5pZH0nLi4uYClcblxuICAgIGxldCBzdGF0dXMgPSBhd2FpdCByZXF1ZXN0LmdldCh7XG4gICAgICAgIHVybDogYGh0dHBzOi8vYXBpLmV2cnl0aG5nLmNvbS8ke2FwcERhdGEucmVzb3VyY2UucGF0aH0vcmVhY3RvclNjcmlwdC9zdGF0dXNgLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBzZXR0aW5ncy5vcGVyYXRvcktleSxcbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICBjb25zb2xlLmxvZyhgUkVBQ1RPUiBzdGF0dXM6ICR7c3RhdHVzfWApXG4gICAgcmV0dXJuIHN0YXR1c1xufVxuXG5hc3luYyBmdW5jdGlvbiBkZWxldGVBbGxBY3Rpb25zICh1c2VyKSB7XG4gICAgYXdhaXQgdXNlci5hY3Rpb24oJ2FsbCcpLnJlYWQoKS50aGVuKChhY3Rpb25zKSA9PiB7XG5cbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKF8ubWFwKGFjdGlvbnMsIChhY3Rpb24pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBvcGVyYXRvci5hY3Rpb24oYWN0aW9uLnR5cGUsIGFjdGlvbi5pZCkuZGVsZXRlKClcblxuICAgICAgICB9KSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgRXJyb3IgZGVsZXRpbmcgQWN0aW9uczogJHtKU09OLnN0cmluZ2lmeShlcnJvciwgbnVsbCwgMil9YClcbiAgICAgICAgfSlcbiAgICB9KVxuXG4gICAgY29uc29sZS5sb2coJ0FsbCBBY3Rpb25zIGRlbGV0ZWQnKVxufVxuXG5hc3luYyBmdW5jdGlvbiBzZXR1cEZpeHR1cmVzICgpIHtcbiAgICAvL2xldCBwcm9qZWN0ID0gYXdhaXQgY3JlYXRlUHJvamVjdChvcGVyYXRvcilcbiAgICAvL2xldCBhcHAgPSBhd2FpdCBjcmVhdGVBcHAocHJvamVjdClcbiAgICBsZXQgcHJvamVjdCA9IGF3YWl0IGZldGNoUHJvamVjdChzZXR0aW5ncylcbiAgICBsZXQgYXBwID0gYXdhaXQgZmV0Y2hBcHAoc2V0dGluZ3MpXG4gICAgbGV0IHVzZXIgPSBhd2FpdCBjcmVhdGVVc2VyKGFwcClcbiAgICBhd2FpdCBkZWxldGVBbGxBY3Rpb25zKHVzZXIpXG4gICAgbGV0IGNvbGxlY3Rpb24gPSBhd2FpdCBjcmVhdGVDb2xsZWN0aW9uKHVzZXIpXG4gICAgYXdhaXQgY3JlYXRlQWN0aW9uVHlwZXMoWydfZGltJywgJ19vbicsICdfb2ZmJ10pXG5cbiAgICByZXR1cm4geyBwcm9qZWN0LCBhcHAsIHVzZXIsIGNvbGxlY3Rpb24gfVxufVxuXG5hc3luYyBmdW5jdGlvbiB0ZWFyRG93biAoZml4dHVyZXMpIHtcbiAgICBhd2FpdCBkZWxldGVBbGxBY3Rpb25zKGZpeHR1cmVzLnVzZXIpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHRlc3QxICh0KSB7XG4gICAgbGV0IHsgcHJvamVjdCwgYXBwLCB1c2VyLCBjb2xsZWN0aW9uIH0gPSBhd2FpdCBzZXR1cEZpeHR1cmVzKClcbiAgICBsZXQgcnVsZSA9IGdldFNhbXBsZVJ1bGUoKVxuICAgIHJ1bGUuY29uZGl0aW9ucyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgJ3ZhcmlhYmxlJzogJ29jY3VwYW5jeV9kZXRlY3RlZCcsXG4gICAgICAgICAgICAnb3BlcmF0b3InOiAnPScsXG4gICAgICAgICAgICAndmFsdWUnOiB0cnVlLFxuICAgICAgICAgICAgJ2xvZ2ljYWxfb3BlcmF0b3InOiAnYW5kJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgJ3ZhcmlhYmxlJzogJ2FtYmllbnRfbGlnaHQnLFxuICAgICAgICAgICAgJ29wZXJhdG9yJzogJz4nLFxuICAgICAgICAgICAgJ3ZhbHVlJzogMTAsXG4gICAgICAgICAgICAnbG9naWNhbF9vcGVyYXRvcic6IG51bGwsXG4gICAgICAgIH0sXG4gICAgXVxuICAgIHJ1bGUub3BlcmF0aW9ucyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgJ2NvbGxlY3Rpb25zJzogW1xuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb24uaWRcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAnYWN0aW9ucyc6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICduYW1lJzogJ19vZmYnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICduYW1lJzogJ19kaW0nLFxuICAgICAgICAgICAgICAgICAgICAncGFyYW1ldGVycyc6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICd2YWx1ZSc6IDFcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgIF1cblxuICAgIGxldCBydWxlcyA9IHsgJ19fcnVsZV9fNzgyODcyODcwMDEwMSc6IHJ1bGUgfVxuXG4gICAgbGV0IHByb3BlcnRpZXMgPSB7XG4gICAgICAgICdvY2N1cGFuY3lfZGV0ZWN0ZWQnOiBmYWxzZSxcbiAgICAgICAgJ2FtYmllbnRfbGlnaHQnOiA5LFxuICAgIH1cblxuICAgIGxldCBhY3Rpb25zID0gYXdhaXQgdXNlci5hY3Rpb24oJ2FsbCcpLnJlYWQoKVxuICAgIHQuZXF1YWwoYWN0aW9ucy5sZW5ndGgsIDApXG5cbiAgICBsZXQgdGhuZyA9IGF3YWl0IGNyZWF0ZVRobmcodXNlciwgcnVsZXMsIHByb3BlcnRpZXMpXG5cbiAgICBzbGVlcC5zbGVlcCgxKVxuICAgIGFjdGlvbnMgPSBhd2FpdCB1c2VyLmFjdGlvbignYWxsJykucmVhZCgpXG4gICAgdC5lcXVhbChhY3Rpb25zLmxlbmd0aCwgMClcblxuICAgIGxldCBwcm9wcyA9IGF3YWl0IHRobmcucHJvcGVydHkoJ2FtYmllbnRfbGlnaHQnKS51cGRhdGUoMTEpXG4gICAgbGV0IGFtYmllbnRfbGlnaHQgPSBwcm9wc1swXS52YWx1ZVxuICAgIHQuZXF1YWwoYW1iaWVudF9saWdodCwgMTEpXG5cbiAgICBwcm9wcyA9IGF3YWl0IHRobmcucHJvcGVydHkoJ29jY3VwYW5jeV9kZXRlY3RlZCcpLnVwZGF0ZSh0cnVlKVxuICAgIGxldCBvY2N1cGFuY3lfZGV0ZWN0ZWQgPSBwcm9wc1swXS52YWx1ZVxuICAgIHQuZXF1YWwob2NjdXBhbmN5X2RldGVjdGVkLCB0cnVlKVxuXG4gICAgc2xlZXAuc2xlZXAoMSlcblxuICAgIGFjdGlvbnMgPSBhd2FpdCB1c2VyLmFjdGlvbignYWxsJykucmVhZCgpXG5cbiAgICB0LmVxdWFsKGFjdGlvbnMubGVuZ3RoLCAyKVxuXG4gICAgYXdhaXQgdGVhckRvd24oeyB1c2VyIH0pXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHRlc3QyICh0KSB7XG4gICAgbGV0IHsgcHJvamVjdCwgYXBwLCB1c2VyLCBjb2xsZWN0aW9uIH0gPSBhd2FpdCBzZXR1cEZpeHR1cmVzKClcbiAgICBsZXQgcnVsZSA9IGdldFNhbXBsZVJ1bGUoKVxuICAgIGxldCB0b2RheSA9IG1vbWVudC51dGMoKS5mb3JtYXQoJ2RkZCcpLnRvTG93ZXJDYXNlKClcbiAgICBjb25zb2xlLmxvZyh0b2RheSlcbiAgICBydWxlLmNvbmRpdGlvbnMgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAgICd2YXJpYWJsZSc6ICdkYXlfb2Zfd2VlaycsXG4gICAgICAgICAgICAnb3BlcmF0b3InOiAnPScsXG4gICAgICAgICAgICAndmFsdWUnOiBbXG4gICAgICAgICAgICAgICAgdG9kYXlcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAnbG9naWNhbF9vcGVyYXRvcic6ICdhbmQnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICAndmFyaWFibGUnOiAnb2NjdXBhbmN5X2RldGVjdGVkJyxcbiAgICAgICAgICAgICdvcGVyYXRvcic6ICc9JyxcbiAgICAgICAgICAgICd2YWx1ZSc6IGZhbHNlLFxuICAgICAgICAgICAgJ2xvZ2ljYWxfb3BlcmF0b3InOiBudWxsLFxuICAgICAgICB9LFxuICAgIF1cbiAgICBydWxlLm9wZXJhdGlvbnMgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAgICdjb2xsZWN0aW9ucyc6IFtcbiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uLmlkXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgJ2FjdGlvbnMnOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAnbmFtZSc6ICdfZGltJyxcbiAgICAgICAgICAgICAgICAgICAgJ3BhcmFtZXRlcnMnOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAndmFsdWUnOiA1XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXVxuICAgICAgICB9XG4gICAgXVxuXG4gICAgbGV0IHJ1bGVzID0geyAnX19ydWxlX183ODI4NzI4NzAwMTAxJzogcnVsZSB9XG5cbiAgICBsZXQgcHJvcGVydGllcyA9IHtcbiAgICAgICAgJ29jY3VwYW5jeV9kZXRlY3RlZCc6IGZhbHNlLFxuICAgICAgICAnY29sb3VyX3RlbXBlcmF0dXJlJzogMyxcbiAgICB9XG5cbiAgICBsZXQgYWN0aW9ucyA9IGF3YWl0IHVzZXIuYWN0aW9uKCdhbGwnKS5yZWFkKClcbiAgICB0LmVxdWFsKGFjdGlvbnMubGVuZ3RoLCAwKVxuXG4gICAgbGV0IHRobmcgPSBhd2FpdCBjcmVhdGVUaG5nKHVzZXIsIHJ1bGVzLCBwcm9wZXJ0aWVzKVxuXG4gICAgc2xlZXAuc2xlZXAoMSlcbiAgICBhY3Rpb25zID0gYXdhaXQgdXNlci5hY3Rpb24oJ2FsbCcpLnJlYWQoKVxuICAgIHQuZXF1YWwoYWN0aW9ucy5sZW5ndGgsIDEpXG4gICAgdC5lcXVhbChhY3Rpb25zWzBdLnR5cGUsICdfZGltJylcbiAgICB0LmVxdWFsKGFjdGlvbnNbMF0uY3VzdG9tRmllbGRzLnZhbHVlLCA1KVxuXG4gICAgLy8gVGhpcyB1cGRhdGUgc2hvdWxkLCBzaW5jZSB3ZSd2ZSB3YWl0ZWQuXG4gICAgbGV0IHByb3BzID0gYXdhaXQgdGhuZy5wcm9wZXJ0eSgnY29sb3VyX3RlbXBlcmF0dXJlJykudXBkYXRlKDQpXG4gICAgbGV0IGNvbG91cl90ZW1wZXJhdHVyZSA9IHByb3BzWzBdLnZhbHVlXG4gICAgdC5lcXVhbChjb2xvdXJfdGVtcGVyYXR1cmUsIDQpXG5cbiAgICBzbGVlcC5zbGVlcCgxKVxuICAgIGFjdGlvbnMgPSBhd2FpdCB1c2VyLmFjdGlvbignYWxsJykucmVhZCgpXG4gICAgdC5lcXVhbChhY3Rpb25zLmxlbmd0aCwgMilcblxuICAgIGF3YWl0IHRlYXJEb3duKHsgdXNlciB9KVxufVxuICAgIFxuYXN5bmMgZnVuY3Rpb24gdGVzdDMgKHQpIHtcbiAgICBsZXQgeyBwcm9qZWN0LCBhcHAsIHVzZXIsIGNvbGxlY3Rpb24gfSA9IGF3YWl0IHNldHVwRml4dHVyZXMoKVxuICAgIGxldCBydWxlID0gZ2V0U2FtcGxlUnVsZSgpXG4gICAgbGV0IHNvb24gPSBtb21lbnQudXRjKCkuYWRkKDUsICdzZWNvbmRzJykuZm9ybWF0KCdISDptbTpzcycpXG4gICAgcnVsZS5jb25kaXRpb25zID0gW1xuICAgICAgICB7XG4gICAgICAgICAgICAndmFyaWFibGUnOiAndGltZV9vZl9kYXknLFxuICAgICAgICAgICAgJ29wZXJhdG9yJzogJz4nLFxuICAgICAgICAgICAgJ3ZhbHVlJzogc29vbixcbiAgICAgICAgICAgICdsb2dpY2FsX29wZXJhdG9yJzogbnVsbCxcbiAgICAgICAgfSxcbiAgICBdXG4gICAgcnVsZS5vcGVyYXRpb25zID0gW1xuICAgICAgICB7XG4gICAgICAgICAgICAnY29sbGVjdGlvbnMnOiBbXG4gICAgICAgICAgICAgICAgY29sbGVjdGlvbi5pZFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICdhY3Rpb25zJzogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgJ25hbWUnOiAnX29uJ1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdXG4gICAgICAgIH1cbiAgICBdXG5cbiAgICBsZXQgcnVsZXMgPSB7ICdfX3J1bGVfXzc4Mjg3Mjg3MDAxMDEnOiBydWxlIH1cblxuICAgIGxldCBwcm9wZXJ0aWVzID0ge1xuICAgICAgICAnYW1iaWVudF9saWdodCc6IDEsXG4gICAgfVxuXG4gICAgbGV0IGFjdGlvbnMgPSBhd2FpdCB1c2VyLmFjdGlvbignYWxsJykucmVhZCgpXG4gICAgdC5lcXVhbChhY3Rpb25zLmxlbmd0aCwgMClcblxuICAgIGxldCB0aG5nID0gYXdhaXQgY3JlYXRlVGhuZyh1c2VyLCBydWxlcywgcHJvcGVydGllcylcblxuICAgIHNsZWVwLnNsZWVwKDEpXG4gICAgYWN0aW9ucyA9IGF3YWl0IHVzZXIuYWN0aW9uKCdhbGwnKS5yZWFkKClcbiAgICB0LmVxdWFsKGFjdGlvbnMubGVuZ3RoLCAwKVxuXG4gICAgLy8gVGhpcyB1cGRhdGUgc2hvdWxkbid0IHRyaWdnZXIgYW4gYWN0aW9uLCBzaW5jZSBpdCdzIG5vdCB0aW1lIHlldC5cbiAgICBsZXQgcHJvcHMgPSBhd2FpdCB0aG5nLnByb3BlcnR5KCdhbWJpZW50X2xpZ2h0JykudXBkYXRlKDIpXG4gICAgbGV0IGFtYmllbnRfbGlnaHQgPSBwcm9wc1swXS52YWx1ZVxuICAgIHQuZXF1YWwoYW1iaWVudF9saWdodCwgMilcblxuICAgIHNsZWVwLnNsZWVwKDEpXG4gICAgYWN0aW9ucyA9IGF3YWl0IHVzZXIuYWN0aW9uKCdhbGwnKS5yZWFkKClcbiAgICB0LmVxdWFsKGFjdGlvbnMubGVuZ3RoLCAwKVxuXG4gICAgc2xlZXAuc2xlZXAoMylcblxuICAgIC8vIFRoaXMgdXBkYXRlIHNob3VsZCwgc2luY2Ugd2UndmUgd2FpdGVkLlxuICAgIHByb3BzID0gYXdhaXQgdGhuZy5wcm9wZXJ0eSgnYW1iaWVudF9saWdodCcpLnVwZGF0ZSgzKVxuICAgIGFtYmllbnRfbGlnaHQgPSBwcm9wc1swXS52YWx1ZVxuICAgIHQuZXF1YWwoYW1iaWVudF9saWdodCwgMylcblxuICAgIHNsZWVwLnNsZWVwKDEpXG4gICAgYWN0aW9ucyA9IGF3YWl0IHVzZXIuYWN0aW9uKCdhbGwnKS5yZWFkKClcbiAgICB0LmVxdWFsKGFjdGlvbnMubGVuZ3RoLCAxKVxuICAgIHQuZXF1YWwoYWN0aW9ucy5sZW5ndGgsIDEpXG4gICAgdC5lcXVhbChhY3Rpb25zWzBdLnR5cGUsICdfb24nKVxuXG4gICAgYXdhaXQgdGVhckRvd24oeyB1c2VyIH0pXG59XG5cbnRlc3QoJ0ludGVncmF0aW9uIHRlc3RzJywgYXN5bmMgKHQpID0+IHtcbiAgICBhd2FpdCB0ZXN0MSh0KVxuICAgIGF3YWl0IHRlc3QyKHQpXG4gICAgYXdhaXQgdGVzdDModClcbn0pXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "integration.test.js"
      ],
      "names": [
        "project",
        "operator",
        "create",
        "PREFIX",
        "log",
        "id",
        "createProject",
        "app",
        "application",
        "EVT",
        "App",
        "appApiKey",
        "createApp",
        "settings",
        "projectId",
        "read",
        "fetchProject",
        "applicationId",
        "fetchApp",
        "user",
        "appUser",
        "anonymous",
        "User",
        "createUser",
        "collection",
        "createCollection",
        "rules",
        "properties",
        "thng",
        "_",
        "assign",
        "createThng",
        "names",
        "actionTypes",
        "Promise",
        "all",
        "map",
        "name",
        "actionType",
        "error",
        "status",
        "console",
        "JSON",
        "stringify",
        "createActionTypes",
        "appData",
        "request",
        "get",
        "url",
        "resource",
        "path",
        "headers",
        "operatorKey",
        "readReactorStatus",
        "action",
        "then",
        "actions",
        "type",
        "delete",
        "catch",
        "deleteAllActions",
        "setupFixtures",
        "fixtures",
        "tearDown",
        "t",
        "rule",
        "getSampleRule",
        "conditions",
        "operations",
        "equal",
        "length",
        "sleep",
        "props",
        "property",
        "update",
        "ambient_light",
        "value",
        "occupancy_detected",
        "test1",
        "today",
        "moment",
        "utc",
        "format",
        "toLowerCase",
        "customFields",
        "colour_temperature",
        "test2",
        "soon",
        "add",
        "test3",
        "require",
        "fs",
        "test",
        "BASE_DIR",
        "__dirname",
        "Operator",
        "parse",
        "readFileSync",
        "objectType",
        "verb",
        "obj"
      ],
      "mappings": "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",
      "file": "integration.test.js",
      "sourceRoot": "/Users/dtr/gooee/REACTOR/tests",
      "sourcesContent": [
        "'use strict'\nlet _ = require('lodash')\nlet EVT = require('evrythng-extended')\nlet fs = require('fs')\nlet moment = require('moment')\nlet request = require('request-promise')\nlet sleep = require('sleep')\nlet test = require('blue-tape')\n\nlet BASE_DIR = `${__dirname}/..`\nlet PREFIX = 'REACTOR'\n\nlet settings = require(`${BASE_DIR}/uploadSettings.json`)\n\nlet operator = new EVT.Operator(settings.operatorKey)\n\nfunction getSampleRule () {\n    let rule = JSON.parse(fs.readFileSync(`${BASE_DIR}/tests/shared/rules-sample-1.json`, 'utf8'))\n    rule.name = `${PREFIX} Rule`\n    return rule\n}\n\nfunction log (objectType, verb, obj) {\n    console.log(`${objectType} '${obj.name}' ${verb} with ID '${obj.id}'`)\n}\n\nasync function createProject () {\n    let project = await operator.project().create({\n        'name': `${PREFIX} Project`\n    })\n\n    log('Project', 'created', project)\n    return operator.project(project.id)\n}\n\nasync function createApp (project) {\n    let app = await project.application().create({\n        'name': `${PREFIX} Application`,\n        'socialNetworks': {},\n    })\n\n    log('Application', 'created', app)\n    return new EVT.App(app.appApiKey)\n}\n\nasync function fetchProject (settings) {\n    let project = await operator\n        .project(settings.projectId)\n        .read()\n\n    log('Project', 'fetched', project)\n    return operator.project(settings.projectId)\n}\n\nasync function fetchApp (settings) {\n    let app = await operator\n        .project(settings.projectId)\n        .application(settings.applicationId)\n        .read()\n\n    log('Application', 'fetched', app)\n    return new EVT.App(app.appApiKey)\n}\n\nasync function createUser (app) {\n    let user = await app.appUser().create({ anonymous: true })\n    log('User', 'created', user)\n    return new EVT.User(user, app)\n}\n\nasync function createCollection (user) {\n    let collection = await user.collection().create({\n        'name': `${PREFIX} Collection`,\n    })\n\n    log('Collection', 'created', collection)\n    return collection\n}\n\nasync function createThng (user, rules, properties) {\n    let thng = await user.thng().create({\n        'name': `${PREFIX} Thng`,\n        'properties': _.assign(properties, rules),\n    })\n\n    log('Thng', 'created', thng)\n    return user.thng(thng.id)\n}\n\nasync function createActionTypes (names) {\n    let actionTypes = Promise.all(names.map(async (name) => {\n        try {\n            let actionType = await operator.actionType().create({ name })\n            // TODO: rescope action types\n\n            log('ActionType', 'created', actionType)\n\n        } catch (error) {\n            if (error.status !== 409)\n                console.error(JSON.stringify(error))\n        }\n    }))\n}\n\nasync function readReactorStatus (appData) {\n    console.log(\n        `Getting the REACTOR status for App '${appData.name}' with ID '${appData.id}'...`)\n\n    let status = await request.get({\n        url: `https://api.evrythng.com/${appData.resource.path}/reactorScript/status`,\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': settings.operatorKey,\n        }\n    })\n\n    console.log(`REACTOR status: ${status}`)\n    return status\n}\n\nasync function deleteAllActions (user) {\n    await user.action('all').read().then((actions) => {\n\n        return Promise.all(_.map(actions, (action) => {\n            return operator.action(action.type, action.id).delete()\n\n        })).catch((error) => {\n            console.log(`Error deleting Actions: ${JSON.stringify(error, null, 2)}`)\n        })\n    })\n\n    console.log('All Actions deleted')\n}\n\nasync function setupFixtures () {\n    //let project = await createProject(operator)\n    //let app = await createApp(project)\n    let project = await fetchProject(settings)\n    let app = await fetchApp(settings)\n    let user = await createUser(app)\n    await deleteAllActions(user)\n    let collection = await createCollection(user)\n    await createActionTypes(['_dim', '_on', '_off'])\n\n    return { project, app, user, collection }\n}\n\nasync function tearDown (fixtures) {\n    await deleteAllActions(fixtures.user)\n}\n\nasync function test1 (t) {\n    let { project, app, user, collection } = await setupFixtures()\n    let rule = getSampleRule()\n    rule.conditions = [\n        {\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': true,\n            'logical_operator': 'and',\n        },\n        {\n            'variable': 'ambient_light',\n            'operator': '>',\n            'value': 10,\n            'logical_operator': null,\n        },\n    ]\n    rule.operations = [\n        {\n            'collections': [\n                collection.id\n            ],\n            'actions': [\n                {\n                    'name': '_off'\n                },\n                {\n                    'name': '_dim',\n                    'parameters': {\n                        'value': 1\n                    }\n                }\n            ]\n        }\n    ]\n\n    let rules = { '__rule__7828728700101': rule }\n\n    let properties = {\n        'occupancy_detected': false,\n        'ambient_light': 9,\n    }\n\n    let actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    let thng = await createThng(user, rules, properties)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    let props = await thng.property('ambient_light').update(11)\n    let ambient_light = props[0].value\n    t.equal(ambient_light, 11)\n\n    props = await thng.property('occupancy_detected').update(true)\n    let occupancy_detected = props[0].value\n    t.equal(occupancy_detected, true)\n\n    sleep.sleep(1)\n\n    actions = await user.action('all').read()\n\n    t.equal(actions.length, 2)\n\n    await tearDown({ user })\n}\n\nasync function test2 (t) {\n    let { project, app, user, collection } = await setupFixtures()\n    let rule = getSampleRule()\n    let today = moment.utc().format('ddd').toLowerCase()\n    console.log(today)\n    rule.conditions = [\n        {\n            'variable': 'day_of_week',\n            'operator': '=',\n            'value': [\n                today\n            ],\n            'logical_operator': 'and',\n        },\n        {\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': false,\n            'logical_operator': null,\n        },\n    ]\n    rule.operations = [\n        {\n            'collections': [\n                collection.id\n            ],\n            'actions': [\n                {\n                    'name': '_dim',\n                    'parameters': {\n                        'value': 5\n                    }\n                },\n            ]\n        }\n    ]\n\n    let rules = { '__rule__7828728700101': rule }\n\n    let properties = {\n        'occupancy_detected': false,\n        'colour_temperature': 3,\n    }\n\n    let actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    let thng = await createThng(user, rules, properties)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 1)\n    t.equal(actions[0].type, '_dim')\n    t.equal(actions[0].customFields.value, 5)\n\n    // This update should, since we've waited.\n    let props = await thng.property('colour_temperature').update(4)\n    let colour_temperature = props[0].value\n    t.equal(colour_temperature, 4)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 2)\n\n    await tearDown({ user })\n}\n    \nasync function test3 (t) {\n    let { project, app, user, collection } = await setupFixtures()\n    let rule = getSampleRule()\n    let soon = moment.utc().add(5, 'seconds').format('HH:mm:ss')\n    rule.conditions = [\n        {\n            'variable': 'time_of_day',\n            'operator': '>',\n            'value': soon,\n            'logical_operator': null,\n        },\n    ]\n    rule.operations = [\n        {\n            'collections': [\n                collection.id\n            ],\n            'actions': [\n                {\n                    'name': '_on'\n                },\n            ]\n        }\n    ]\n\n    let rules = { '__rule__7828728700101': rule }\n\n    let properties = {\n        'ambient_light': 1,\n    }\n\n    let actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    let thng = await createThng(user, rules, properties)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    // This update shouldn't trigger an action, since it's not time yet.\n    let props = await thng.property('ambient_light').update(2)\n    let ambient_light = props[0].value\n    t.equal(ambient_light, 2)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    sleep.sleep(3)\n\n    // This update should, since we've waited.\n    props = await thng.property('ambient_light').update(3)\n    ambient_light = props[0].value\n    t.equal(ambient_light, 3)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 1)\n    t.equal(actions.length, 1)\n    t.equal(actions[0].type, '_on')\n\n    await tearDown({ user })\n}\n\ntest('Integration tests', async (t) => {\n    await test1(t)\n    await test2(t)\n    await test3(t)\n})\n"
      ]
    },
    "mtime": 1472655423000
  },
  "{\"filename\":\"/Users/dtr/gooee/REACTOR/scripts/integration.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/dtr/gooee/REACTOR/scripts\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false}:6.14.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/dtr/gooee/REACTOR/scripts/integration.js",
      "filenameRelative": "/Users/dtr/gooee/REACTOR/scripts/integration.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "integration.js",
      "sourceFileName": "integration.js",
      "sourceRoot": "/Users/dtr/gooee/REACTOR/scripts",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/dtr/gooee/REACTOR/scripts",
      "moduleIds": false,
      "passPerPreset": false,
      "basename": "integration"
    },
    "ignored": false,
    "code": "'use strict';\n\nlet fetchProject = (() => {\n    var _ref = _asyncToGenerator(function* (settings) {\n        let project = yield operator.project(settings.projectId).read();\n\n        log('Project', 'fetched', project);\n        return operator.project(settings.projectId);\n    });\n\n    return function fetchProject(_x) {\n        return _ref.apply(this, arguments);\n    };\n})();\n\nlet fetchApp = (() => {\n    var _ref2 = _asyncToGenerator(function* (settings) {\n        let app = yield operator.project(settings.projectId).application(settings.applicationId).read();\n\n        log('Application', 'fetched', app);\n        return new EVT.App(app.appApiKey);\n    });\n\n    return function fetchApp(_x2) {\n        return _ref2.apply(this, arguments);\n    };\n})();\n\nlet createUser = (() => {\n    var _ref3 = _asyncToGenerator(function* (app) {\n        let user = yield app.appUser().create({ anonymous: true });\n        log('User', 'created', user);\n        return new EVT.User(user, app);\n    });\n\n    return function createUser(_x3) {\n        return _ref3.apply(this, arguments);\n    };\n})();\n\nlet createCollection = (() => {\n    var _ref4 = _asyncToGenerator(function* (user) {\n        let collection = yield user.collection().create({\n            'name': `${ PREFIX } Collection`\n        });\n\n        log('Collection', 'created', collection);\n        return collection;\n    });\n\n    return function createCollection(_x4) {\n        return _ref4.apply(this, arguments);\n    };\n})();\n\nlet createThng = (() => {\n    var _ref5 = _asyncToGenerator(function* (user, rules, properties) {\n        let thng = yield user.thng().create({\n            'name': `${ PREFIX } Thng`,\n            'properties': _.assign(properties, rules)\n        });\n\n        log('Thng', 'created', thng);\n        return user.thng(thng.id);\n    });\n\n    return function createThng(_x5, _x6, _x7) {\n        return _ref5.apply(this, arguments);\n    };\n})();\n\nlet createActionTypes = (() => {\n    var _ref6 = _asyncToGenerator(function* (names) {\n        return Promise.all(names.map((() => {\n            var _ref7 = _asyncToGenerator(function* (name) {\n                try {\n                    let actionType = yield operator.actionType().create({ name });\n                    // TODO: rescope action types\n\n                    log('ActionType', 'created', actionType);\n                    return actionType;\n                } catch (error) {\n                    if (error.status !== 409) console.error(JSON.stringify(error));\n                }\n            });\n\n            return function (_x9) {\n                return _ref7.apply(this, arguments);\n            };\n        })()));\n    });\n\n    return function createActionTypes(_x8) {\n        return _ref6.apply(this, arguments);\n    };\n})();\n\nlet deleteAllActions = (() => {\n    var _ref8 = _asyncToGenerator(function* (user) {\n        yield user.action('all').read().then(function (actions) {\n\n            return Promise.all(_.map(actions, function (action) {\n                return operator.action(action.type, action.id).delete();\n            })).catch(function (error) {\n                console.log(`Error deleting Actions: ${ JSON.stringify(error, null, 2) }`);\n            });\n        });\n\n        console.log('All Actions deleted');\n    });\n\n    return function deleteAllActions(_x10) {\n        return _ref8.apply(this, arguments);\n    };\n})();\n\nlet setupFixtures = (() => {\n    var _ref9 = _asyncToGenerator(function* () {\n        let project = yield fetchProject(settings);\n        let app = yield fetchApp(settings);\n        let user = yield createUser(app);\n        yield deleteAllActions(user);\n        let collection = yield createCollection(user);\n        yield createActionTypes(['_dim', '_on', '_off']);\n\n        return { project, app, user, collection };\n    });\n\n    return function setupFixtures() {\n        return _ref9.apply(this, arguments);\n    };\n})();\n\nlet tearDown = (() => {\n    var _ref10 = _asyncToGenerator(function* (fixtures) {\n        yield deleteAllActions(fixtures.user);\n    });\n\n    return function tearDown(_x11) {\n        return _ref10.apply(this, arguments);\n    };\n})();\n\nlet test1 = (() => {\n    var _ref11 = _asyncToGenerator(function* (t) {\n        var _ref12 = yield setupFixtures();\n\n        let user = _ref12.user;\n        let collection = _ref12.collection;\n\n        let rule = getSampleRule();\n        rule.conditions = [{\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': true,\n            'logical_operator': 'and'\n        }, {\n            'variable': 'ambient_light',\n            'operator': '>',\n            'value': 10,\n            'logical_operator': null\n        }];\n        rule.operations = [{\n            'collections': [collection.id],\n            'actions': [{\n                'name': '_off'\n            }, {\n                'name': '_dim',\n                'parameters': {\n                    'value': 1\n                }\n            }]\n        }];\n\n        let rules = { '__rule__7828728700101': rule };\n\n        let properties = {\n            'occupancy_detected': false,\n            'ambient_light': 9\n        };\n\n        let actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        let thng = yield createThng(user, rules, properties);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        let props = yield thng.property('ambient_light').update(11);\n        let ambient_light = props[0].value;\n        t.equal(ambient_light, 11);\n\n        props = yield thng.property('occupancy_detected').update(true);\n        let occupancy_detected = props[0].value;\n        t.equal(occupancy_detected, true);\n\n        sleep.sleep(1);\n\n        actions = yield user.action('all').read();\n\n        t.equal(actions.length, 2);\n\n        yield tearDown({ user });\n    });\n\n    return function test1(_x12) {\n        return _ref11.apply(this, arguments);\n    };\n})();\n\nlet test2 = (() => {\n    var _ref13 = _asyncToGenerator(function* (t) {\n        var _ref14 = yield setupFixtures();\n\n        let user = _ref14.user;\n        let collection = _ref14.collection;\n\n        let rule = getSampleRule();\n        let today = moment.utc().format('ddd').toLowerCase();\n        console.log(today);\n        rule.conditions = [{\n            'variable': 'day_of_week',\n            'operator': '=',\n            'value': [today],\n            'logical_operator': 'and'\n        }, {\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': false,\n            'logical_operator': null\n        }];\n        rule.operations = [{\n            'collections': [collection.id],\n            'actions': [{\n                'name': '_dim',\n                'parameters': {\n                    'value': 5\n                }\n            }]\n        }];\n\n        let rules = { '__rule__7828728700101': rule };\n\n        let properties = {\n            'occupancy_detected': false,\n            'colour_temperature': 3\n        };\n\n        let actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        let thng = yield createThng(user, rules, properties);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 1);\n        t.equal(actions[0].type, '_dim');\n        t.equal(actions[0].customFields.value, 5);\n\n        // This update should, since we've waited.\n        let props = yield thng.property('colour_temperature').update(4);\n        let colour_temperature = props[0].value;\n        t.equal(colour_temperature, 4);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 2);\n\n        yield tearDown({ user });\n    });\n\n    return function test2(_x13) {\n        return _ref13.apply(this, arguments);\n    };\n})();\n\nlet test3 = (() => {\n    var _ref15 = _asyncToGenerator(function* (t) {\n        var _ref16 = yield setupFixtures();\n\n        let user = _ref16.user;\n        let collection = _ref16.collection;\n\n        let rule = getSampleRule();\n        let soon = moment.utc().add(5, 'seconds').format('HH:mm:ss');\n        rule.conditions = [{\n            'variable': 'time_of_day',\n            'operator': '>',\n            'value': soon,\n            'logical_operator': null\n        }];\n        rule.operations = [{\n            'collections': [collection.id],\n            'actions': [{\n                'name': '_on'\n            }]\n        }];\n\n        let rules = { '__rule__7828728700101': rule };\n\n        let properties = {\n            'ambient_light': 1\n        };\n\n        let actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        let thng = yield createThng(user, rules, properties);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        // This update shouldn't trigger an action, since it's not time yet.\n        let props = yield thng.property('ambient_light').update(2);\n        let ambient_light = props[0].value;\n        t.equal(ambient_light, 2);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 0);\n\n        sleep.sleep(3);\n\n        // This update should, since we've waited.\n        props = yield thng.property('ambient_light').update(3);\n        ambient_light = props[0].value;\n        t.equal(ambient_light, 3);\n\n        sleep.sleep(1);\n        actions = yield user.action('all').read();\n        t.equal(actions.length, 1);\n        t.equal(actions.length, 1);\n        t.equal(actions[0].type, '_on');\n\n        yield tearDown({ user });\n    });\n\n    return function test3(_x14) {\n        return _ref15.apply(this, arguments);\n    };\n})();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { return step(\"next\", value); }, function (err) { return step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nlet _ = require('lodash');\nlet EVT = require('evrythng-extended');\nlet fs = require('fs');\nlet moment = require('moment');\nlet sleep = require('sleep');\nlet test = require('blue-tape');\n\nlet BASE_DIR = `${ __dirname }/..`;\nlet PREFIX = 'REACTOR';\n\nlet settings = require(`${ BASE_DIR }/uploadSettings.json`);\n\nlet operator = new EVT.Operator(settings.operatorKey);\n\nfunction getSampleRule() {\n    let rule = JSON.parse(fs.readFileSync(`${ BASE_DIR }/tests/shared/rules-sample-1.json`, 'utf8'));\n    rule.name = `${ PREFIX } Rule`;\n    return rule;\n}\n\nfunction log(objectType, verb, obj) {\n    console.log(`${ objectType } '${ obj.name }' ${ verb } with ID '${ obj.id }'`);\n}\n\ntest('Integration tests', (() => {\n    var _ref17 = _asyncToGenerator(function* (t) {\n        console.log('###############################################################');\n        console.log('1. MAKE SURE THE REACTOR IS FINISHED UPLOADING.');\n        console.log('2. MAKE SURE THE VALUES IN `uploadSettings.json` ARE CORRECT.');\n        console.log('3. IF THE TESTS FAIL, RUN THEM A FEW MORE TIMES. IT MAY HAVE');\n        console.log('   BEEN A CONNECTION/TIMING ISSUE.');\n        console.log('###############################################################');\n        yield test1(t);\n        yield test2(t);\n        yield test3(t);\n    });\n\n    return function (_x15) {\n        return _ref17.apply(this, arguments);\n    };\n})());\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "integration.js"
      ],
      "names": [
        "settings",
        "project",
        "operator",
        "projectId",
        "read",
        "log",
        "fetchProject",
        "app",
        "application",
        "applicationId",
        "EVT",
        "App",
        "appApiKey",
        "fetchApp",
        "user",
        "appUser",
        "create",
        "anonymous",
        "User",
        "createUser",
        "collection",
        "PREFIX",
        "createCollection",
        "rules",
        "properties",
        "thng",
        "_",
        "assign",
        "id",
        "createThng",
        "names",
        "Promise",
        "all",
        "map",
        "name",
        "actionType",
        "error",
        "status",
        "console",
        "JSON",
        "stringify",
        "createActionTypes",
        "action",
        "then",
        "actions",
        "type",
        "delete",
        "catch",
        "deleteAllActions",
        "setupFixtures",
        "fixtures",
        "tearDown",
        "t",
        "rule",
        "getSampleRule",
        "conditions",
        "operations",
        "equal",
        "length",
        "sleep",
        "props",
        "property",
        "update",
        "ambient_light",
        "value",
        "occupancy_detected",
        "test1",
        "today",
        "moment",
        "utc",
        "format",
        "toLowerCase",
        "customFields",
        "colour_temperature",
        "test2",
        "soon",
        "add",
        "test3",
        "require",
        "fs",
        "test",
        "BASE_DIR",
        "__dirname",
        "Operator",
        "operatorKey",
        "parse",
        "readFileSync",
        "objectType",
        "verb",
        "obj"
      ],
      "mappings": "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",
      "file": "integration.js",
      "sourceRoot": "/Users/dtr/gooee/REACTOR/scripts",
      "sourcesContent": [
        "'use strict'\nlet _ = require('lodash')\nlet EVT = require('evrythng-extended')\nlet fs = require('fs')\nlet moment = require('moment')\nlet sleep = require('sleep')\nlet test = require('blue-tape')\n\nlet BASE_DIR = `${__dirname}/..`\nlet PREFIX = 'REACTOR'\n\nlet settings = require(`${BASE_DIR}/uploadSettings.json`)\n\nlet operator = new EVT.Operator(settings.operatorKey)\n\nfunction getSampleRule () {\n    let rule = JSON.parse(fs.readFileSync(`${BASE_DIR}/tests/shared/rules-sample-1.json`, 'utf8'))\n    rule.name = `${PREFIX} Rule`\n    return rule\n}\n\nfunction log (objectType, verb, obj) {\n    console.log(`${objectType} '${obj.name}' ${verb} with ID '${obj.id}'`)\n}\n\nasync function fetchProject (settings) {\n    let project = await operator\n        .project(settings.projectId)\n        .read()\n\n    log('Project', 'fetched', project)\n    return operator.project(settings.projectId)\n}\n\nasync function fetchApp (settings) {\n    let app = await operator\n        .project(settings.projectId)\n        .application(settings.applicationId)\n        .read()\n\n    log('Application', 'fetched', app)\n    return new EVT.App(app.appApiKey)\n}\n\nasync function createUser (app) {\n    let user = await app.appUser().create({ anonymous: true })\n    log('User', 'created', user)\n    return new EVT.User(user, app)\n}\n\nasync function createCollection (user) {\n    let collection = await user.collection().create({\n        'name': `${PREFIX} Collection`,\n    })\n\n    log('Collection', 'created', collection)\n    return collection\n}\n\nasync function createThng (user, rules, properties) {\n    let thng = await user.thng().create({\n        'name': `${PREFIX} Thng`,\n        'properties': _.assign(properties, rules),\n    })\n\n    log('Thng', 'created', thng)\n    return user.thng(thng.id)\n}\n\nasync function createActionTypes (names) {\n    return Promise.all(names.map(async (name) => {\n        try {\n            let actionType = await operator.actionType().create({ name })\n            // TODO: rescope action types\n\n            log('ActionType', 'created', actionType)\n            return actionType\n\n        } catch (error) {\n            if (error.status !== 409)\n                console.error(JSON.stringify(error))\n        }\n    }))\n}\n\nasync function deleteAllActions (user) {\n    await user.action('all').read().then((actions) => {\n\n        return Promise.all(_.map(actions, (action) => {\n            return operator.action(action.type, action.id).delete()\n\n        })).catch((error) => {\n            console.log(`Error deleting Actions: ${JSON.stringify(error, null, 2)}`)\n        })\n    })\n\n    console.log('All Actions deleted')\n}\n\nasync function setupFixtures () {\n    let project = await fetchProject(settings)\n    let app = await fetchApp(settings)\n    let user = await createUser(app)\n    await deleteAllActions(user)\n    let collection = await createCollection(user)\n    await createActionTypes(['_dim', '_on', '_off'])\n\n    return { project, app, user, collection }\n}\n\nasync function tearDown (fixtures) {\n    await deleteAllActions(fixtures.user)\n}\n\nasync function test1 (t) {\n    let { user, collection } = await setupFixtures()\n    let rule = getSampleRule()\n    rule.conditions = [\n        {\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': true,\n            'logical_operator': 'and',\n        },\n        {\n            'variable': 'ambient_light',\n            'operator': '>',\n            'value': 10,\n            'logical_operator': null,\n        },\n    ]\n    rule.operations = [\n        {\n            'collections': [\n                collection.id\n            ],\n            'actions': [\n                {\n                    'name': '_off'\n                },\n                {\n                    'name': '_dim',\n                    'parameters': {\n                        'value': 1\n                    }\n                }\n            ]\n        }\n    ]\n\n    let rules = { '__rule__7828728700101': rule }\n\n    let properties = {\n        'occupancy_detected': false,\n        'ambient_light': 9,\n    }\n\n    let actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    let thng = await createThng(user, rules, properties)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    let props = await thng.property('ambient_light').update(11)\n    let ambient_light = props[0].value\n    t.equal(ambient_light, 11)\n\n    props = await thng.property('occupancy_detected').update(true)\n    let occupancy_detected = props[0].value\n    t.equal(occupancy_detected, true)\n\n    sleep.sleep(1)\n\n    actions = await user.action('all').read()\n\n    t.equal(actions.length, 2)\n\n    await tearDown({ user })\n}\n\nasync function test2 (t) {\n    let { user, collection } = await setupFixtures()\n    let rule = getSampleRule()\n    let today = moment.utc().format('ddd').toLowerCase()\n    console.log(today)\n    rule.conditions = [\n        {\n            'variable': 'day_of_week',\n            'operator': '=',\n            'value': [\n                today\n            ],\n            'logical_operator': 'and',\n        },\n        {\n            'variable': 'occupancy_detected',\n            'operator': '=',\n            'value': false,\n            'logical_operator': null,\n        },\n    ]\n    rule.operations = [\n        {\n            'collections': [\n                collection.id\n            ],\n            'actions': [\n                {\n                    'name': '_dim',\n                    'parameters': {\n                        'value': 5\n                    }\n                },\n            ]\n        }\n    ]\n\n    let rules = { '__rule__7828728700101': rule }\n\n    let properties = {\n        'occupancy_detected': false,\n        'colour_temperature': 3,\n    }\n\n    let actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    let thng = await createThng(user, rules, properties)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 1)\n    t.equal(actions[0].type, '_dim')\n    t.equal(actions[0].customFields.value, 5)\n\n    // This update should, since we've waited.\n    let props = await thng.property('colour_temperature').update(4)\n    let colour_temperature = props[0].value\n    t.equal(colour_temperature, 4)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 2)\n\n    await tearDown({ user })\n}\n    \nasync function test3 (t) {\n    let { user, collection } = await setupFixtures()\n    let rule = getSampleRule()\n    let soon = moment.utc().add(5, 'seconds').format('HH:mm:ss')\n    rule.conditions = [\n        {\n            'variable': 'time_of_day',\n            'operator': '>',\n            'value': soon,\n            'logical_operator': null,\n        },\n    ]\n    rule.operations = [\n        {\n            'collections': [\n                collection.id\n            ],\n            'actions': [\n                {\n                    'name': '_on'\n                },\n            ]\n        }\n    ]\n\n    let rules = { '__rule__7828728700101': rule }\n\n    let properties = {\n        'ambient_light': 1,\n    }\n\n    let actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    let thng = await createThng(user, rules, properties)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    // This update shouldn't trigger an action, since it's not time yet.\n    let props = await thng.property('ambient_light').update(2)\n    let ambient_light = props[0].value\n    t.equal(ambient_light, 2)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 0)\n\n    sleep.sleep(3)\n\n    // This update should, since we've waited.\n    props = await thng.property('ambient_light').update(3)\n    ambient_light = props[0].value\n    t.equal(ambient_light, 3)\n\n    sleep.sleep(1)\n    actions = await user.action('all').read()\n    t.equal(actions.length, 1)\n    t.equal(actions.length, 1)\n    t.equal(actions[0].type, '_on')\n\n    await tearDown({ user })\n}\n\ntest('Integration tests', async (t) => {\n    console.log('###############################################################')\n    console.log('1. MAKE SURE THE REACTOR IS FINISHED UPLOADING.')\n    console.log('2. MAKE SURE THE VALUES IN `uploadSettings.json` ARE CORRECT.')\n    console.log('3. IF THE TESTS FAIL, RUN THEM A FEW MORE TIMES. IT MAY HAVE')\n    console.log('   BEEN A CONNECTION/TIMING ISSUE.')\n    console.log('###############################################################')\n    await test1(t)\n    await test2(t)\n    await test3(t)\n})\n"
      ]
    },
    "mtime": 1472658692000
  }
}